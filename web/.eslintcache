[{"D:\\TLCN\\web_admin\\web\\src\\index.js":"1","D:\\TLCN\\web_admin\\web\\src\\views\\Home.jsx":"2","D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx":"3","D:\\TLCN\\web_admin\\web\\src\\app.route.jsx":"4","D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\Activate.jsx":"5","D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\Login.jsx":"6","D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx":"7","D:\\TLCN\\web_admin\\web\\src\\controllers\\localStorage.js":"8","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Profile.jsx":"9","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ListUser.jsx":"10","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\UploadData.jsx":"11","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx":"12","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx":"13","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx":"14","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx":"15","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx":"16","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx":"17","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx":"18","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx":"19","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx":"20","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx":"21","D:\\TLCN\\web_admin\\web\\src\\controllers\\PushData.js":"22","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"23","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js":"24","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js":"25","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"26","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ProfileForm\\index.jsx":"27","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\AddAdminForm\\index.jsx":"28","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js":"29"},{"size":1298,"mtime":1609227759841,"results":"30","hashOfConfig":"31"},{"size":6550,"mtime":1609407408169,"results":"32","hashOfConfig":"31"},{"size":3905,"mtime":1609227575708,"results":"33","hashOfConfig":"31"},{"size":522,"mtime":1608991286634,"results":"34","hashOfConfig":"31"},{"size":3769,"mtime":1609227580093,"results":"35","hashOfConfig":"31"},{"size":7614,"mtime":1609234510358,"results":"36","hashOfConfig":"31"},{"size":3022,"mtime":1609227577744,"results":"37","hashOfConfig":"31"},{"size":2002,"mtime":1608991219364,"results":"38","hashOfConfig":"31"},{"size":3738,"mtime":1609409667186,"results":"39","hashOfConfig":"31"},{"size":3701,"mtime":1609397830484,"results":"40","hashOfConfig":"31"},{"size":9644,"mtime":1609414368877,"results":"41","hashOfConfig":"31"},{"size":7039,"mtime":1609413983588,"results":"42","hashOfConfig":"31"},{"size":5460,"mtime":1609408663120,"results":"43","hashOfConfig":"31"},{"size":644,"mtime":1609227533683,"results":"44","hashOfConfig":"31"},{"size":680,"mtime":1609227539301,"results":"45","hashOfConfig":"31"},{"size":543,"mtime":1609227749079,"results":"46","hashOfConfig":"31"},{"size":5572,"mtime":1609227909933,"results":"47","hashOfConfig":"31"},{"size":1088,"mtime":1609227640023,"results":"48","hashOfConfig":"31"},{"size":1305,"mtime":1609227545241,"results":"49","hashOfConfig":"31"},{"size":1054,"mtime":1609227554977,"results":"50","hashOfConfig":"31"},{"size":1115,"mtime":1609330413878,"results":"51","hashOfConfig":"31"},{"size":555,"mtime":1609327710329,"results":"52","hashOfConfig":"31"},{"size":315,"mtime":1608998157762,"results":"53","hashOfConfig":"31"},{"size":834,"mtime":1608998381462,"results":"54","hashOfConfig":"31"},{"size":1497,"mtime":1608999404443,"results":"55","hashOfConfig":"31"},{"size":3079,"mtime":1608998346936,"results":"56","hashOfConfig":"31"},{"size":3662,"mtime":1609407367390,"results":"57","hashOfConfig":"31"},{"size":4691,"mtime":1609407418982,"results":"58","hashOfConfig":"31"},{"size":7303,"mtime":1608998157799,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"jtj6bx",{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"D:\\TLCN\\web_admin\\web\\src\\index.js",[],["125","126"],"D:\\TLCN\\web_admin\\web\\src\\views\\Home.jsx",["127","128","129","130","131","132","133"],"import React, { useEffect, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { Layout, Menu, Badge, Avatar, Popover } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  TeamOutlined,\r\n  UsergroupAddOutlined,\r\n  UploadOutlined,\r\n  BellOutlined,\r\n  NotificationOutlined,\r\n  ProfileOutlined \r\n} from '@ant-design/icons';\r\n// auth\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { isAuth, getCookie, signout } from '../controllers/localStorage';\r\nimport axios from 'axios';\r\n// view updata\r\nimport UpData from './Components/UploadData';\r\n// view list user\r\nimport ListUser from './Components/ListUser';\r\n// view list user admin\r\nimport ListUserAdmin from './Components/ListUserAdmin';\r\n// import components notfication\r\nimport Noti from './Components/Noti';\r\nimport Notification from './Components/SendNoti';\r\nimport Profile from './Components/Profile'\r\nconst { Header, Sider, Content } = Layout; // views\r\nlet heightScreen = window.innerHeight;\r\nconst Home = ({ history }) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [index, setIndex] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [dataAdmin, setDataAdmin] = useState({\r\n    username:'xuannam',\r\n    email: 'teo12011999@gmail.com',\r\n    phone: '1234343434',\r\n    prefix: \"86\",\r\n  });\r\n  const [dataNoti, setDataNoti] = useState([]);\r\n  const [amountNoti, setAmountNoti] = useState(0);\r\n  const [load, setLoad] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [visibleNoti, setVisibleNoti] = useState(false);\r\n  const toggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  // logout\r\n  const Logout = () => {\r\n    signout(() => {\r\n      history.push('/Login')\r\n    });\r\n  }\r\n  // set change logout\r\n  const handleVisibleChange = visible => {\r\n    setVisible(visible);\r\n  };\r\n  // set click notifi\r\n  const handleVisibleChangeNoti = visible => {\r\n    setVisibleNoti(visible);\r\n    setAmountNoti(0);\r\n  };\r\n  // push datanoti\r\n  const pushDataNoti = (data) => {\r\n    return new Promise((resolve, reject) => {\r\n      dataNoti.forEach(element => {\r\n        data.push(element);\r\n      });\r\n      resolve(data);\r\n    });\r\n  }\r\n  // set data notifi\r\n  const setDataNotification = (data) => {\r\n    setAmountNoti(data.length);\r\n    pushDataNoti(data).then(res => {\r\n      setDataNoti(res);\r\n    });\r\n  }\r\n  // set view noti\r\n  const viewNoti = () => {\r\n    return (\r\n      <div style={{overflowY: 'scroll',height:200}} >\r\n        {\r\n            dataNoti.map((element) =>\r\n            <Noti\r\n              content={element.content}\r\n              date={element.date}\r\n              status={element.status}/>\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  const getPosts = () => {\r\n    const token = getCookie('token');\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL}`, {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [load]);\r\n  return (\r\n    <div style={{ flex: 1 }}>\r\n      <Layout>\r\n        <Sider trigger={null} collapsible collapsed={collapsed}>\r\n          <div className=\"logo\" style={{ justifyContent: 'center', display: 'flex', alignItems: 'center' }}>\r\n            <h4 style={{ color: 'white' }}>TOEIC SEB</h4>\r\n          </div>\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\" icon={<TeamOutlined />} onClick={() => {\r\n              setIndex(1);\r\n            }} >\r\n              Admin\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<UsergroupAddOutlined />} onClick={() => {\r\n              setIndex(2);\r\n            }}>\r\n              User\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<UploadOutlined />} onClick={() => {\r\n              setIndex(3);\r\n            }}>\r\n              Data\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\" icon={<NotificationOutlined />} onClick={() => {\r\n              setIndex(4);\r\n            }}>\r\n              Send notification\r\n            </Menu.Item>\r\n            <Menu.Item key=\"5\" icon={<ProfileOutlined />} onClick={() => {\r\n              setIndex(5);\r\n            }}>\r\n              Profile\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0, display: 'flex' }}>\r\n            {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n              className: 'trigger',\r\n              onClick: toggle,\r\n            })}\r\n            <div style={{ flex: 1, display: 'flex', justifyContent: 'flex-end', alignItems: 'center', paddingRight: 30, marginLeft: 20 }}>\r\n              <div style={{ width: 100, display: 'flex' }}>\r\n                <div style={{ width: 150, flex: 1 }}>\r\n                  <Popover\r\n                    placement=\"leftTop\"\r\n                    content={\r\n                      viewNoti      \r\n                    }\r\n                    title=\"All notification\"\r\n                    trigger=\"click\"\r\n                    visible={visibleNoti}\r\n                    onVisibleChange={handleVisibleChangeNoti}\r\n                  >\r\n                    <Badge count={amountNoti}>\r\n                      <Avatar icon={<BellOutlined />} />\r\n                    </Badge>\r\n                  </Popover>\r\n                </div>\r\n                <div style={{ width: 100, flex: 1 }}>\r\n                  <Popover\r\n                    content={<a onClick={Logout}>Logout</a>}\r\n                    title=\"Option\"\r\n                    trigger=\"click\"\r\n                    visible={visible}\r\n                    onVisibleChange={handleVisibleChange}\r\n                  >\r\n                    <Avatar icon={<UserOutlined />} />\r\n                  </Popover>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Header>\r\n          <div style={{ height: heightScreen, padding: 10 }}>\r\n            {\r\n              index === 1 ? <ListUserAdmin />\r\n                : index === 2 ? <ListUser />\r\n                : index === 3? <UpData setDataNotification={(setDataNotification)}/>\r\n                :index === 4?<Notification></Notification>\r\n                :<Profile dataAdmin={dataAdmin}/>\r\n            }\r\n          </div>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\nexport default Home\r\n","D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\app.route.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\Activate.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\Login.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\controllers\\localStorage.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Profile.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ListUser.jsx",["134","135","136","137","138","139","140"],"import React, { useEffect,useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridItem from \"./Grid/GridItem.jsx\";\r\nimport GridContainer from \"./Grid/GridContainer.jsx\";\r\nimport Table from \"./Table/Table.jsx\";\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n// antd library\r\nimport { Tag, Space, Button, Modal,Empty } from \"antd\";\r\n\r\nconst styles = {\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ListUser() {\r\n    const classes = useStyles();\r\n    const [reload, setReload] = React.useState(true)\r\n    const [data, setData] = React.useState([]);\r\n    // input add user admin\r\n    const [isModalVisible, setIsModalVisible] = useState(false); // set is model\r\n    // reload\r\n    const reaLoad = () => {\r\n        getData();\r\n        setReload(!reload);\r\n    }\r\n    // get list user\r\n    const getData = async () => {\r\n        return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let array = data.map(element => {\r\n                    return {\r\n                        id: element.uid,\r\n                        name: element.displayName,\r\n                        email: element.email,\r\n                        disabled: element.disabled,\r\n                        expirationDate: element.expirationDate,\r\n                        package: element.package,\r\n                    }\r\n                })\r\n                setData(array);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    return (\r\n        <GridContainer>\r\n            <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                    <CardHeader color=\"primary\">\r\n                        <div style={{ display: \"flex\", }}>\r\n                            <div style={{ flex: 1 }} >\r\n                                <h4 className={classes.cardTitleWhite}>List user</h4>\r\n                                <p className={classes.cardCategoryWhite}>\r\n                                    User management\r\n                            </p>\r\n                            </div>\r\n                            <div style={{ flex: 1 }}>\r\n                            </div>                       \r\n                        </div>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {data.length>0? <Table\r\n                            tableHeaderColor=\"primary\"\r\n                            tableHead={['id', 'name', 'email', 'disabled', 'expiration', 'package']}\r\n                            tableData={data}\r\n                            reaLoad={reaLoad}\r\n                        />:<Empty />}\r\n                    </CardBody>\r\n                </Card>\r\n            </GridItem>\r\n        </GridContainer>\r\n    );\r\n}\r\n","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\UploadData.jsx",["141","142","143","144","145"],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx",["146","147","148","149"],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx",["150","151","152","153","154"],"import React, { useState, useEffect } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Tag, Space, Button, Modal } from \"antd\";\r\nconst styles = {\r\n  typo: {\r\n    paddingLeft: \"25%\",\r\n    marginBottom: \"40px\",\r\n    position: \"relative\"\r\n  },\r\n  note: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    bottom: \"10px\",\r\n    color: \"#c0c1c2\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"13px\",\r\n    lineHeight: \"13px\",\r\n    left: \"0\",\r\n    marginLeft: \"20px\",\r\n    position: \"absolute\",\r\n    width: \"260px\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function Notification() {\r\n  const classes = useStyles();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const packageBuy = ['orange', 'red', 'blue', 'purple'];\r\n\r\n  const handleOk = () => {\r\n\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flex: 1 }}>\r\n            <h4 className={classes.cardTitleWhite}>Send Notification</h4>\r\n          </div>\r\n          <div style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end', display: 'flex' }}>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>BASIC 1</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button>Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>BASIC 2</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button>Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>STANDART</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button>Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>PREMIUM</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button>Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Tùy chỉnh</text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button style={{ backgroundColor: '#ab47bc', color: 'white' }} onClick={\r\n              showModal\r\n            }>Cutom</Button>\r\n          </div>\r\n        </div>\r\n        <Modal title=\"Custom\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n        </Modal>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx",["155","156"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// core components\r\nimport styles from \"../../assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n// dialog\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { element } from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function CustomTable(props) {\r\n  const classes = useStyles();\r\n  const { tableHead, tableData, tableHeaderColor,reaLoad } = props;\r\n  const [data, setData] = React.useState([]);;\r\n  const [open, setOpen] = React.useState(false);  // open dialog\r\n  const [id, setID] = React.useState('');  // id user\r\n  const [value, setValue] = React.useState(''); //item vua chon\r\n  const handleClickOpen = (item) => { // set id user, open dialog\r\n    setValue(item);\r\n    setID(item[0]);\r\n    setOpen(true);\r\n  };\r\n  const deleteUser = async () => {\r\n    return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/disable/${value.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n    }).then(() => {\r\n      reaLoad();\r\n    });\r\n  }\r\n  const enableUser = async () => {\r\n    return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/enable/${value.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n    }).then(() => {\r\n      reaLoad();\r\n    });\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleAgree = () => {\r\n    //console.log(value.id);\r\n    if(value.disabled){\r\n      enableUser();\r\n    }else deleteUser();\r\n    setOpen(false);\r\n  }\r\n  useEffect(() => {\r\n    setData(tableData);\r\n    return () => {\r\n    }\r\n  }, [tableData])\r\n  return (\r\n    <div className={classes.tableResponsive}>\r\n      \r\n      <Dialog // dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{value.status === \"true\" ? \"Bạn có chắc chắc disable user không\" : \"Bạn có chắc chắn enable user không?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {id}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\"\r\n            onClick={() =>\r\n              handleClose()\r\n            }>\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus\r\n            onClick={() =>\r\n              handleAgree()\r\n            }>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Table className={classes.table}>\r\n        {tableHead !== undefined ? (\r\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\r\n            <TableRow className={classes.tableHeadRow}>\r\n              {tableHead?.map((prop, key) => {\r\n                return (\r\n                  <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={key}\r\n                  >\r\n                    {prop}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n              <TableCell\r\n                className={classes.tableCell + \" \" + classes.tableHeadCell}>\r\n                {'option'}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n        ) : null}\r\n        <TableBody>\r\n          {data?.map((prop, key) => {\r\n            return (\r\n              <TableRow key={key} className={classes.tableBodyRow} style={{}}>\r\n                {Object.values(prop)?.map((prop, key) => {\r\n                  return (\r\n                    <TableCell className={classes.tableCell} key={key} >\r\n                      {prop?.toString()}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n                <div>\r\n                 \r\n                  <TableCell style={{color:'red'}}\r\n                    onClick={() => handleClickOpen(prop)}>\r\n                    {prop.disabled ?  'enable' : 'disable'}\r\n                  </TableCell>\r\n                </div>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\nCustomTable.defaultProps = {\r\n  tableHeaderColor: \"gray\"\r\n};\r\nCustomTable.propTypes = {\r\n  tableHeaderColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  tableHead: PropTypes.arrayOf(PropTypes.string),\r\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\r\n};\r\n","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\controllers\\PushData.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ProfileForm\\index.jsx",["157","158","159","160","161","162"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst ProfileForm = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { handleOk,dataAdmin } = props;\r\n  const onFinish = (values) => {\r\n    handleOk(values);\r\n  };\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"86\">+86</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      initialValues={dataAdmin}\r\n      scrollToFirstError\r\n      style={{ width: 1000 }}\r\n    >\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"username\"\r\n        label={\r\n          <span>\r\n            UserName&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n              <QuestionCircleOutlined />\r\n            </Tooltip>\r\n          </span>\r\n        }\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your nickname!',\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(rule, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"phone\"\r\n        label=\"Phone Number\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your phone number!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          addonBefore={prefixSelector}\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Update\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ProfileForm","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\AddAdminForm\\index.jsx",["163","164","165"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Select,\r\n    Button,\r\n    notification\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nconst ProfileForm = (props) => {\r\n    const {handleOk} = props;\r\n    const [form] = Form.useForm();\r\n    const [reload, setReload] = useState(false);\r\n    const onFinish = (values) => {\r\n        handleOk(values);\r\n      \r\n    };\r\n \r\n    const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"86\">+86</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n    \r\n    return (\r\n        <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                rules={[\r\n                    {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"username\"\r\n                label={\r\n                    <span>\r\n                        UserName&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n                            <QuestionCircleOutlined />\r\n                        </Tooltip>\r\n                    </span>\r\n                }\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your nickname!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your phone number!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    addonBefore={prefixSelector}\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Add admin\r\n        </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default ProfileForm","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":17,"column":10,"nodeType":"172","messageId":"173","endLine":17,"endColumn":24},{"ruleId":"170","severity":1,"message":"174","line":18,"column":10,"nodeType":"172","messageId":"173","endLine":18,"endColumn":16},{"ruleId":"170","severity":1,"message":"175","line":30,"column":24,"nodeType":"172","messageId":"173","endLine":30,"endColumn":31},{"ruleId":"170","severity":1,"message":"176","line":35,"column":10,"nodeType":"172","messageId":"173","endLine":35,"endColumn":14},{"ruleId":"170","severity":1,"message":"177","line":36,"column":21,"nodeType":"172","messageId":"173","endLine":36,"endColumn":33},{"ruleId":"170","severity":1,"message":"178","line":44,"column":16,"nodeType":"172","messageId":"173","endLine":44,"endColumn":23},{"ruleId":"179","severity":1,"message":"180","line":175,"column":30,"nodeType":"181","endLine":175,"endColumn":50},{"ruleId":"170","severity":1,"message":"182","line":9,"column":8,"nodeType":"172","messageId":"173","endLine":9,"endColumn":17},{"ruleId":"170","severity":1,"message":"183","line":11,"column":10,"nodeType":"172","messageId":"173","endLine":11,"endColumn":13},{"ruleId":"170","severity":1,"message":"184","line":11,"column":15,"nodeType":"172","messageId":"173","endLine":11,"endColumn":20},{"ruleId":"170","severity":1,"message":"185","line":11,"column":22,"nodeType":"172","messageId":"173","endLine":11,"endColumn":28},{"ruleId":"170","severity":1,"message":"186","line":11,"column":30,"nodeType":"172","messageId":"173","endLine":11,"endColumn":35},{"ruleId":"170","severity":1,"message":"187","line":50,"column":12,"nodeType":"172","messageId":"173","endLine":50,"endColumn":26},{"ruleId":"170","severity":1,"message":"188","line":50,"column":28,"nodeType":"172","messageId":"173","endLine":50,"endColumn":45},{"ruleId":"170","severity":1,"message":"183","line":11,"column":17,"nodeType":"172","messageId":"173","endLine":11,"endColumn":20},{"ruleId":"170","severity":1,"message":"184","line":11,"column":22,"nodeType":"172","messageId":"173","endLine":11,"endColumn":27},{"ruleId":"170","severity":1,"message":"189","line":15,"column":3,"nodeType":"172","messageId":"173","endLine":15,"endColumn":16},{"ruleId":"170","severity":1,"message":"190","line":15,"column":18,"nodeType":"172","messageId":"173","endLine":15,"endColumn":31},{"ruleId":"191","severity":1,"message":"192","line":205,"column":5,"nodeType":"193","messageId":"194","endLine":288,"endColumn":6},{"ruleId":"170","severity":1,"message":"183","line":9,"column":17,"nodeType":"172","messageId":"173","endLine":9,"endColumn":20},{"ruleId":"170","severity":1,"message":"184","line":9,"column":22,"nodeType":"172","messageId":"173","endLine":9,"endColumn":27},{"ruleId":"170","severity":1,"message":"195","line":57,"column":22,"nodeType":"172","messageId":"173","endLine":57,"endColumn":35},{"ruleId":"170","severity":1,"message":"196","line":168,"column":9,"nodeType":"172","messageId":"173","endLine":168,"endColumn":18},{"ruleId":"170","severity":1,"message":"197","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"198","line":9,"column":10,"nodeType":"172","messageId":"173","endLine":9,"endColumn":15},{"ruleId":"170","severity":1,"message":"183","line":9,"column":17,"nodeType":"172","messageId":"173","endLine":9,"endColumn":20},{"ruleId":"170","severity":1,"message":"184","line":9,"column":22,"nodeType":"172","messageId":"173","endLine":9,"endColumn":27},{"ruleId":"170","severity":1,"message":"199","line":52,"column":9,"nodeType":"172","messageId":"173","endLine":52,"endColumn":19},{"ruleId":"170","severity":1,"message":"200","line":19,"column":10,"nodeType":"172","messageId":"173","endLine":19,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":98,"column":13,"nodeType":"203","endLine":100,"endColumn":14},{"ruleId":"170","severity":1,"message":"204","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"205","line":7,"column":3,"nodeType":"172","messageId":"173","endLine":7,"endColumn":11},{"ruleId":"170","severity":1,"message":"206","line":9,"column":3,"nodeType":"172","messageId":"173","endLine":9,"endColumn":6},{"ruleId":"170","severity":1,"message":"207","line":10,"column":3,"nodeType":"172","messageId":"173","endLine":10,"endColumn":6},{"ruleId":"170","severity":1,"message":"208","line":11,"column":3,"nodeType":"172","messageId":"173","endLine":11,"endColumn":11},{"ruleId":"170","severity":1,"message":"209","line":13,"column":3,"nodeType":"172","messageId":"173","endLine":13,"endColumn":15},{"ruleId":"170","severity":1,"message":"210","line":9,"column":5,"nodeType":"172","messageId":"173","endLine":9,"endColumn":17},{"ruleId":"170","severity":1,"message":"211","line":47,"column":12,"nodeType":"172","messageId":"173","endLine":47,"endColumn":18},{"ruleId":"170","severity":1,"message":"212","line":47,"column":20,"nodeType":"172","messageId":"173","endLine":47,"endColumn":29},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'isAuth' is defined but never used.","'Content' is assigned a value but never used.","'data' is assigned a value but never used.","'setDataAdmin' is assigned a value but never used.","'setLoad' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'TableBody' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'isModalVisible' is assigned a value but never used.","'setIsModalVisible' is assigned a value but never used.","'SmileOutlined' is defined but never used.","'FrownOutlined' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setLoadingAdd' is assigned a value but never used.","'editAdmin' is assigned a value but never used.","'useEffect' is defined but never used.","'Table' is defined but never used.","'packageBuy' is assigned a value but never used.","'element' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'Cascader' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Checkbox' is defined but never used.","'AutoComplete' is defined but never used.","'notification' is defined but never used.","'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]