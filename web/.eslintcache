[{"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\index.js":"1","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx":"2","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Home.jsx":"3","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\Login.jsx":"4","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx":"5","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\app.route.jsx":"6","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\Activate.jsx":"7","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\controllers\\localStorage.js":"8","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\ListUser.jsx":"9","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\UploadData.jsx":"10","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx":"11","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx":"12","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Profile.jsx":"13","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx":"14","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx":"15","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx":"16","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx":"17","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx":"18","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx":"19","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"20","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js":"21","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"22","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\ProfileForm\\index.jsx":"23","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js":"24","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx":"25","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx":"26","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\controllers\\PushData.js":"27","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js":"28","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\AddAdminForm\\index.jsx":"29"},{"size":1336,"mtime":1609340848037,"results":"30","hashOfConfig":"31"},{"size":3905,"mtime":1609340848058,"results":"32","hashOfConfig":"31"},{"size":6602,"mtime":1609576818177,"results":"33","hashOfConfig":"31"},{"size":8037,"mtime":1609575812043,"results":"34","hashOfConfig":"31"},{"size":3022,"mtime":1609340848058,"results":"35","hashOfConfig":"31"},{"size":522,"mtime":1609340848033,"results":"36","hashOfConfig":"31"},{"size":3769,"mtime":1609340848058,"results":"37","hashOfConfig":"31"},{"size":2130,"mtime":1609498949251,"results":"38","hashOfConfig":"31"},{"size":3701,"mtime":1609497799739,"results":"39","hashOfConfig":"31"},{"size":9637,"mtime":1609497799751,"results":"40","hashOfConfig":"31"},{"size":7039,"mtime":1609497799742,"results":"41","hashOfConfig":"31"},{"size":10191,"mtime":1609589447470,"results":"42","hashOfConfig":"31"},{"size":3738,"mtime":1609497799744,"results":"43","hashOfConfig":"31"},{"size":1054,"mtime":1609340848040,"results":"44","hashOfConfig":"31"},{"size":1305,"mtime":1609340848052,"results":"45","hashOfConfig":"31"},{"size":1088,"mtime":1609340848039,"results":"46","hashOfConfig":"31"},{"size":644,"mtime":1609340848053,"results":"47","hashOfConfig":"31"},{"size":680,"mtime":1609340848053,"results":"48","hashOfConfig":"31"},{"size":1115,"mtime":1609340848055,"results":"49","hashOfConfig":"31"},{"size":315,"mtime":1609340848128,"results":"50","hashOfConfig":"31"},{"size":834,"mtime":1609340848129,"results":"51","hashOfConfig":"31"},{"size":3079,"mtime":1609340848128,"results":"52","hashOfConfig":"31"},{"size":3771,"mtime":1609576233137,"results":"53","hashOfConfig":"31"},{"size":7303,"mtime":1609340848126,"results":"54","hashOfConfig":"31"},{"size":543,"mtime":1609340848057,"results":"55","hashOfConfig":"31"},{"size":5572,"mtime":1609340848056,"results":"56","hashOfConfig":"31"},{"size":555,"mtime":1609340848037,"results":"57","hashOfConfig":"31"},{"size":1497,"mtime":1609340848132,"results":"58","hashOfConfig":"31"},{"size":4691,"mtime":1609497799733,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"8mbce",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\index.js",[],["126","127"],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Home.jsx",["128","129","130","131","132","133","134","135","136","137"],"import React, { useEffect, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { Layout, Menu, Badge, Avatar, Popover } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  TeamOutlined,\r\n  UsergroupAddOutlined,\r\n  UploadOutlined,\r\n  BellOutlined,\r\n  NotificationOutlined,\r\n  ProfileOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { getLocalStorage } from '../controllers/localStorage';\r\n// auth\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { isAuth, getCookie, signout } from '../controllers/localStorage';\r\nimport axios from 'axios';\r\n// view updata\r\nimport UpData from './Components/UploadData';\r\n// view list user\r\nimport ListUser from './Components/ListUser';\r\n// view list user admin\r\nimport ListUserAdmin from './Components/ListUserAdmin';\r\n// import components notfication\r\nimport Noti from './Components/Noti';\r\nimport Notification from './Components/SendNoti';\r\nimport Profile from './Components/Profile'\r\nconst { Header, Sider, Content } = Layout; // views\r\nlet heightScreen = window.innerHeight;\r\nconst Home = ({ history }) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [index, setIndex] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [dataAdmin, setDataAdmin] = useState({\r\n    username: 'xuannam',\r\n    email: 'teo12011999@gmail.com',\r\n    phone: '1234343434',\r\n    prefix: \"86\",\r\n  });\r\n  const [name, setName] = useState('');\r\n  const [dataNoti, setDataNoti] = useState([]);\r\n  const [amountNoti, setAmountNoti] = useState(0);\r\n  const [load, setLoad] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [visibleNoti, setVisibleNoti] = useState(false);\r\n  const toggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  // logout\r\n  const Logout = () => {\r\n    signout(() => {\r\n      history.push('/Login')\r\n    });\r\n  }\r\n  // set change logout\r\n  const handleVisibleChange = visible => {\r\n    setVisible(visible);\r\n  };\r\n  // set click notifi\r\n  const handleVisibleChangeNoti = visible => {\r\n    setVisibleNoti(visible);\r\n    setAmountNoti(0);\r\n  };\r\n  // push datanoti\r\n  const pushDataNoti = (data) => {\r\n    return new Promise((resolve, reject) => {\r\n      dataNoti.forEach(element => {\r\n        data.push(element);\r\n      });\r\n      resolve(data);\r\n    });\r\n  }\r\n  // set data notifi\r\n  const setDataNotification = (data) => {\r\n    setAmountNoti(data.length);\r\n    pushDataNoti(data).then(res => {\r\n      setDataNoti(res);\r\n    });\r\n  }\r\n  // set view noti\r\n  const viewNoti = () => {\r\n    return (\r\n      <div style={{ overflowY: 'scroll', height: 200 }} >\r\n        {\r\n          dataNoti.map((element) =>\r\n            <Noti\r\n              content={element.content}\r\n              date={element.date}\r\n              status={element.status} />\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  useEffect(() => {\r\n    let user = getLocalStorage('user');\r\n    console.log('lonnam', user);\r\n    let lonnam = {\r\n      username: user.name,\r\n      email: user.email,\r\n      phone: user.phonenumber,\r\n      prefix: \"86\",\r\n    }\r\n    setName(user.name);\r\n    console.log('manh', lonnam)\r\n    setDataAdmin(lonnam);\r\n  }, [name]);\r\n  return (\r\n    <div style={{ flex: 1 }}>\r\n      <Layout>\r\n        <Sider trigger={null} collapsible collapsed={collapsed}>\r\n          <div className=\"logo\" style={{ justifyContent: 'center', display: 'flex', alignItems: 'center' }}>\r\n            <h4 style={{ color: 'white' }}>TOEIC SEB</h4>\r\n          </div>\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\" icon={<TeamOutlined />} onClick={() => {\r\n              setIndex(1);\r\n            }} >\r\n              Admin\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<UsergroupAddOutlined />} onClick={() => {\r\n              setIndex(2);\r\n            }}>\r\n              User\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<UploadOutlined />} onClick={() => {\r\n              setIndex(3);\r\n            }}>\r\n              Data\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\" icon={<NotificationOutlined />} onClick={() => {\r\n              setIndex(4);\r\n            }}>\r\n              Send notification\r\n            </Menu.Item>\r\n            <Menu.Item key=\"5\" icon={<ProfileOutlined />} onClick={() => {\r\n              setIndex(5);\r\n            }}>\r\n              Profile\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0, display: 'flex' }}>\r\n            {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n              className: 'trigger',\r\n              onClick: toggle,\r\n            })}\r\n            <div style={{ flex: 1, display: 'flex', justifyContent: 'flex-end', alignItems: 'center', paddingRight: 30, marginLeft: 20 }}>\r\n              <div style={{ width: 100, display: 'flex' }}>\r\n                <div style={{ width: 150, flex: 1 }}>\r\n                  <Popover\r\n                    placement=\"leftTop\"\r\n                    content={\r\n                      viewNoti\r\n                    }\r\n                    title=\"All notification\"\r\n                    trigger=\"click\"\r\n                    visible={visibleNoti}\r\n                    onVisibleChange={handleVisibleChangeNoti}\r\n                  >\r\n                    <Badge count={amountNoti}>\r\n                      <Avatar icon={<BellOutlined />} />\r\n                    </Badge>\r\n                  </Popover>\r\n                </div>\r\n                <div style={{ width: 100, flex: 1 }}>\r\n                  <Popover\r\n                    content={<a onClick={Logout}>Logout</a>}\r\n                    title=\"Option\"\r\n                    trigger=\"click\"\r\n                    visible={visible}\r\n                    onVisibleChange={handleVisibleChange}\r\n                  >\r\n                    <Avatar icon={<UserOutlined />} />\r\n                  </Popover>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Header>\r\n          <div style={{ height: heightScreen, padding: 10 }}>\r\n            {\r\n              index === 1 ? <ListUserAdmin />\r\n                : index === 2 ? <ListUser />\r\n                  : index === 3 ? <UpData setDataNotification={(setDataNotification)} />\r\n                    : index === 4 ? <Notification></Notification>\r\n                      : <Profile dataAdmin={dataAdmin} />\r\n            }\r\n          </div>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\nexport default Home\r\n","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\Login.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\app.route.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\Activate.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\controllers\\localStorage.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\ListUser.jsx",["138","139","140","141","142","143","144"],"import React, { useEffect,useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridItem from \"./Grid/GridItem.jsx\";\r\nimport GridContainer from \"./Grid/GridContainer.jsx\";\r\nimport Table from \"./Table/Table.jsx\";\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n// antd library\r\nimport { Tag, Space, Button, Modal,Empty } from \"antd\";\r\n\r\nconst styles = {\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ListUser() {\r\n    const classes = useStyles();\r\n    const [reload, setReload] = React.useState(true)\r\n    const [data, setData] = React.useState([]);\r\n    // input add user admin\r\n    const [isModalVisible, setIsModalVisible] = useState(false); // set is model\r\n    // reload\r\n    const reaLoad = () => {\r\n        getData();\r\n        setReload(!reload);\r\n    }\r\n    // get list user\r\n    const getData = async () => {\r\n        return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let array = data.map(element => {\r\n                    return {\r\n                        id: element.uid,\r\n                        name: element.displayName,\r\n                        email: element.email,\r\n                        disabled: element.disabled,\r\n                        expirationDate: element.expirationDate,\r\n                        package: element.package,\r\n                    }\r\n                })\r\n                setData(array);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    return (\r\n        <GridContainer>\r\n            <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                    <CardHeader color=\"primary\">\r\n                        <div style={{ display: \"flex\", }}>\r\n                            <div style={{ flex: 1 }} >\r\n                                <h4 className={classes.cardTitleWhite}>List user</h4>\r\n                                <p className={classes.cardCategoryWhite}>\r\n                                    User management\r\n                            </p>\r\n                            </div>\r\n                            <div style={{ flex: 1 }}>\r\n                            </div>                       \r\n                        </div>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {data.length>0? <Table\r\n                            tableHeaderColor=\"primary\"\r\n                            tableHead={['id', 'name', 'email', 'disabled', 'expiration', 'package']}\r\n                            tableData={data}\r\n                            reaLoad={reaLoad}\r\n                        />:<Empty />}\r\n                    </CardBody>\r\n                </Card>\r\n            </GridItem>\r\n        </GridContainer>\r\n    );\r\n}\r\n","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\UploadData.jsx",["145","146","147","148","149"],"import React, { useState,useEffect } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport XLSX from 'xlsx';\r\nimport UploadFileView from './UploadFileView/index.jsx';\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Tag, Space, Button, Modal,notification } from \"antd\";\r\nimport moment from \"moment\";\r\n// import icon\r\nimport {\r\n  SmileOutlined, FrownOutlined\r\n} from '@ant-design/icons';\r\n// api up data\r\nimport { pushFile } from '../../controllers/PushData';\r\nconst styles = {\r\n  typo: {\r\n    paddingLeft: \"25%\",\r\n    marginBottom: \"40px\",\r\n    position: \"relative\"\r\n  },\r\n  note: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    bottom: \"10px\",\r\n    color: \"#c0c1c2\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"13px\",\r\n    lineHeight: \"13px\",\r\n    left: \"0\",\r\n    marginLeft: \"20px\",\r\n    position: \"absolute\",\r\n    width: \"260px\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nlet datasetFile = [{\r\n  \"name\": \"jayanth\",\r\n  \"data\": \"scd\",\r\n  \"abc\": \"sdef\"\r\n}]\r\n\r\n// columns\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"Name\",\r\n    key: \"Name\"\r\n  },\r\n  {\r\n    title: \"IDYear\",\r\n    dataIndex: \"IDYear\",\r\n    key: \"IDYear\"\r\n  },\r\n  {\r\n    title: \"IDTest\",\r\n    dataIndex: \"IDTest\",\r\n    key: \"IDTest\"\r\n  },\r\n  {\r\n    title: \"Buy\",\r\n    dataIndex: \"Buy\",\r\n    key: \"Buy\"\r\n  }\r\n];\r\n\r\nlet content = [\r\n  {\r\n    name: 'part1',\r\n    title: 'Up load data part 1'\r\n  },\r\n  {\r\n    name: 'part2',\r\n    title: 'Up load data part 2'\r\n  },\r\n  {\r\n    name: 'part3',\r\n    title: 'Up load data part 3'\r\n  },\r\n  {\r\n    name: 'part4',\r\n    title: 'Up load data part 4'\r\n  },\r\n  {\r\n    name: 'part5',\r\n    title: 'Up load data part 5'\r\n  },\r\n  {\r\n    name: 'part6',\r\n    title: 'Up load data part 6'\r\n  },\r\n  {\r\n    name: 'part7',\r\n    title: 'Up load data part 7'\r\n  },\r\n  {\r\n    name: 'part3detail',\r\n    title: 'Up load data part 3 detail'\r\n  },\r\n  {\r\n    name: 'part4detail',\r\n    title: 'Up load data part 4 detail'\r\n  },\r\n  {\r\n    name: 'part6detail',\r\n    title: 'Up load data part 6 detail'\r\n  },\r\n  {\r\n    name: 'part7detail',\r\n    title: 'Up load data part 7 detail'\r\n  },\r\n  {\r\n    name: 'test',\r\n    title: 'Up load data test'\r\n  },\r\n\r\n]\r\nexport default function UploadData(props) {\r\n  const { setDataNotification } = props;\r\n  const classes = useStyles();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const getData = async () => {\r\n    return await fetch(`https://toeic-seb-firebase.herokuapp.com/database/test/`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data.length);\r\n        let array = data.map(element => {\r\n          return {\r\n            Buy: element.Buy,\r\n            IDTest: element.IDTest,\r\n            IDYear: element.IDYear,\r\n            Name: element.Name,\r\n          }\r\n        })\r\n        array.sort(function (a, b) {\r\n          return a.IDTest - b.IDTest;\r\n        });   \r\n        setData(array);\r\n      });\r\n  }\r\n  // name and data post database\r\n  const dataUpload = {\r\n    part1: [],\r\n    part2: [],\r\n    part3: [],\r\n    part4: [],\r\n    part5: [],\r\n    part6: [],\r\n    part7: [],\r\n    part3detail: [],\r\n    part4detail: [],\r\n    part6detail: [],\r\n    part7detail: [],\r\n    test: [],\r\n  }\r\n\r\n  // convert excel to json\r\n  const UploadFile = (e) => {\r\n    // console.log(e);\r\n    return new Promise((resolve, reject) => {\r\n      let selectedFile = e.target.files[0];\r\n      XLSX.utils.json_to_sheet(datasetFile, selectedFile.name);\r\n      if (selectedFile) {\r\n        let fileReader = new FileReader();\r\n        fileReader.readAsBinaryString(selectedFile);\r\n        fileReader.onload = (event) => {\r\n          let data = event.target.result;\r\n          let workbook = XLSX.read(data, { type: \"binary\" });\r\n          // console.log(workbook);\r\n          workbook.SheetNames.forEach(sheet => {\r\n            let rowObject = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheet]);\r\n            let result = JSON.stringify(rowObject, undefined, 4);\r\n            resolve(result);\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n  // set file \r\n  const uploadFile = async (e, name) => {\r\n    switch (name) {\r\n      case 'part1': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part1 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part2': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part2 = data;\r\n          })\r\n        break;\r\n      } case 'part3': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part3 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part4': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part4 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part5': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part5 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part6': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part6 = data;\r\n          })\r\n        break;\r\n      } case 'part7': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part7 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part3detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part3detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part4detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part4detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part6detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part6detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part7detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part7detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'test': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.test = data;\r\n          })\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // check data upload\r\n  const checkDataUpload = () => {\r\n    for (const property in dataUpload) {\r\n      if (property.length === 0 ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  // push data firebase\r\n  const pushData = async () => {\r\n    let res = [];\r\n    for (const property in dataUpload) {\r\n      await pushFile(dataUpload[property], property)\r\n        .then(data => {\r\n          if (data.status) {\r\n            res.push({\r\n              content: `Add data ${property} success`,\r\n              date: moment().format('YYYY/MM/DD'),\r\n              status: data.status\r\n            })\r\n          }\r\n          else {\r\n            res.push({\r\n              content: `Add data ${property} fail`,\r\n              date: moment().format('YYYY/MM/DD'),\r\n              status: data.status\r\n            })\r\n          }\r\n        });\r\n    };\r\n    // set data notification\r\n    setDataNotification(res);\r\n    setLoading(false); // set loadding\r\n    setIsModalVisible(false);\r\n  }\r\n  // notification\r\n  const openNotification = () => {\r\n    const args = {\r\n      message: 'Thông báo!!',\r\n      description:\r\n        'Vui lòng thêm đầy đủ các phần!!!',\r\n      duration: 0,\r\n    };\r\n    notification.open(args);\r\n  };\r\n  // show add \r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (checkDataUpload) {\r\n      setLoading(true);\r\n      pushData();\r\n    }\r\n    else {\r\n      openNotification();\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    if(!loading){\r\n      setIsModalVisible(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [])\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flex: 1 }}>\r\n            <h4 className={classes.cardTitleWhite}>Up load data</h4>\r\n          </div>\r\n          <div style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button type=\"primary\" shape=\"circle\" onClick={showModal} >\r\n              +\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Modal\r\n          visible={isModalVisible}\r\n          title=\"Add data\"\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n              Up load\r\n            </Button>,\r\n          ]}\r\n        >\r\n          {\r\n            content.map((element) =>\r\n              <UploadFileView\r\n                uploadFile={uploadFile}\r\n                name={element.name}\r\n                title={element.title} />\r\n            )\r\n          }\r\n        </Modal>\r\n        <Table columns={columns} dataSource={data} />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx",["150","151","152","153"],"import React, { useState, useEffect } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Tag, Space, Button, Modal, notification } from \"antd\";\r\n\r\nimport AddAdminForm from './AddAdminForm';\r\nconst styles = {\r\n  typo: {\r\n    paddingLeft: \"25%\",\r\n    marginBottom: \"40px\",\r\n    position: \"relative\"\r\n  },\r\n  note: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    bottom: \"10px\",\r\n    color: \"#c0c1c2\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"13px\",\r\n    lineHeight: \"13px\",\r\n    left: \"0\",\r\n    marginLeft: \"20px\",\r\n    position: \"absolute\",\r\n    width: \"260px\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nexport default function UploadData() {\r\n\r\n  const classes = useStyles();\r\n  const [visibleEdit, setVisibleEdit] = React.useState(false);  // load model edit admin\r\n  const [isModalVisible, setIsModalVisible] = useState(false); // load model add admin\r\n  const [loadingAdd, setLoadingAdd] = React.useState(false);\r\n  const [loadingEdit, setLoadingEdit] = React.useState(false);\r\n  const [adminCurrent, setAdminCurrent] = React.useState([]); // admin current\r\n  const [modalText, setModalText] = React.useState('Bạn có chắc chắn muốn disable admin không?'); // model edit admin\r\n  const [reload, setReload] = React.useState(true) // reload\r\n  const [data, setData] = React.useState([]); // data\r\n  // input add user admin\r\n\r\n  // get list admin\r\n  const getData = async () => {\r\n    return await fetch(`https://toeic-seb.herokuapp.com/admin/`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let array = data.map(element => {\r\n          return {\r\n            id: element._id,\r\n            name: element.name,\r\n            email: element.email,\r\n            status: element['status']?.toString(),\r\n            role: element.role,\r\n          }\r\n        })\r\n     \r\n        setData(array);\r\n      });\r\n  }\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\"\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\"\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\"\r\n    },\r\n    {\r\n      title: \"Role\",\r\n      dataIndex: \"role\",\r\n      key: \"role\"\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\"\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    getData();\r\n  }, [])\r\n\r\n  // show modal admin\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  // ok add admin\r\n  const handleOk = (values) => {\r\n    signUp(values)\r\n      .then(data => {\r\n        if (data.status) {\r\n          openNotification('Thêm admin thành công.');\r\n          setReload(!reload);\r\n        }\r\n        else {\r\n          openNotification('Thêm admin thất bại!!');\r\n        }\r\n      });\r\n    setIsModalVisible(false);\r\n  };\r\n  // notication add admin\r\n  const openNotification = (content) => {\r\n    const args = {\r\n      message: 'Thông báo!!',\r\n      description: content,\r\n      duration: 0,\r\n    };\r\n    notification.open(args);\r\n  };\r\n  // cancel admin\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  // add admin\r\n  const signUp = async (values) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://toeic-seb.herokuapp.com/admin/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json, text/plain, */*',\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': \"*\",\r\n          mode: 'no-cors'\r\n        },\r\n        body: JSON.stringify({\r\n          username: values.username,\r\n          email: values.email,\r\n          password: values.confirm,\r\n          phone: values.phone\r\n        }),\r\n      }).then((data) => {\r\n        resolve(data.json);\r\n      })\r\n    });\r\n  }\r\n  // api edit admin\r\n  const editAdmin = async () => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://toeic-seb.herokuapp.com/admin/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json, text/plain, */*',\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': \"*\",\r\n          mode: 'no-cors'\r\n        },\r\n        body: JSON.stringify({\r\n          username: adminCurrent.username,\r\n          email: adminCurrent.email,\r\n          password: adminCurrent.confirm,\r\n          phone: adminCurrent.phone\r\n        }),\r\n      }).then((data) => {\r\n        resolve(data.json);\r\n      })\r\n    });\r\n  }\r\n  // edit admin\r\n  const handleOkEdit = () => {\r\n    //setModalText(`Bạn có chắc chắn muôn disable admin không?`);\r\n    setLoadingEdit(true);\r\n    //editAdmin();\r\n  };\r\n  // cancel edit\r\n  const handleCancelEdit = () => {\r\n    setVisibleEdit(false);\r\n    setLoadingEdit(false);\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flex: 1 }}>\r\n            <h4 className={classes.cardTitleWhite}>List admin</h4>\r\n          </div>\r\n          <div style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button onClick={\r\n              showModal\r\n            }>Add admin</Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Modal title=\"Add data\" visible={isModalVisible} confirmLoading={loadingAdd} footer={null} onCancel={handleCancel}>\r\n          <AddAdminForm handleOk={handleOk} />\r\n        </Modal>\r\n        <Modal\r\n          title=\"Thông báo\"\r\n          visible={visibleEdit}\r\n          onOk={handleOkEdit}\r\n          confirmLoading={loadingEdit}\r\n          onCancel={handleCancelEdit}\r\n        >\r\n          <p>{modalText}</p>\r\n        </Modal>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={data}\r\n          onRow={(record, rowIndex) => {\r\n            return {\r\n              onDoubleClick: event => {\r\n                setAdminCurrent(data[rowIndex]);\r\n                if (data[rowIndex].status) {\r\n                  setModalText('Bạn có chắc chắn muốn disable admin không?');\r\n                } else {\r\n                  setModalText('Bạn có chắc chắn muốn enable admin không?');\r\n                }\r\n                setVisibleEdit(true);\r\n              }, // double click row           \r\n            };\r\n          }}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx",["154","155","156","157","158","159"],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Profile.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\ProfileForm\\index.jsx",["160","161","162","163","164","165"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst ProfileForm = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { handleOk,dataAdmin } = props;\r\n  const onFinish = (values) => {\r\n    handleOk(values);\r\n  };\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option key=\"84\" value=\"84\">+84</Option>\r\n        <Option key=\"86\" value=\"86\">+86</Option>\r\n        <Option key=\"89\" value=\"89\">+89</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      initialValues={dataAdmin}\r\n      scrollToFirstError\r\n      style={{ width: 1000 }}\r\n    >\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"username\"\r\n        label={\r\n          <span>\r\n            UserName&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n              <QuestionCircleOutlined />\r\n            </Tooltip>\r\n          </span>\r\n        }\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your nickname!',\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(rule, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"phone\"\r\n        label=\"Phone Number\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your phone number!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          addonBefore={prefixSelector}\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Update\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ProfileForm","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx",["166","167"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// core components\r\nimport styles from \"../../assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n// dialog\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { element } from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function CustomTable(props) {\r\n  const classes = useStyles();\r\n  const { tableHead, tableData, tableHeaderColor,reaLoad } = props;\r\n  const [data, setData] = React.useState([]);;\r\n  const [open, setOpen] = React.useState(false);  // open dialog\r\n  const [id, setID] = React.useState('');  // id user\r\n  const [value, setValue] = React.useState(''); //item vua chon\r\n  const handleClickOpen = (item) => { // set id user, open dialog\r\n    setValue(item);\r\n    setID(item[0]);\r\n    setOpen(true);\r\n  };\r\n  const deleteUser = async () => {\r\n    return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/disable/${value.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n    }).then(() => {\r\n      reaLoad();\r\n    });\r\n  }\r\n  const enableUser = async () => {\r\n    return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/enable/${value.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n    }).then(() => {\r\n      reaLoad();\r\n    });\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleAgree = () => {\r\n    //console.log(value.id);\r\n    if(value.disabled){\r\n      enableUser();\r\n    }else deleteUser();\r\n    setOpen(false);\r\n  }\r\n  useEffect(() => {\r\n    setData(tableData);\r\n    return () => {\r\n    }\r\n  }, [tableData])\r\n  return (\r\n    <div className={classes.tableResponsive}>\r\n      \r\n      <Dialog // dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{value.status === \"true\" ? \"Bạn có chắc chắc disable user không\" : \"Bạn có chắc chắn enable user không?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {id}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\"\r\n            onClick={() =>\r\n              handleClose()\r\n            }>\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus\r\n            onClick={() =>\r\n              handleAgree()\r\n            }>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Table className={classes.table}>\r\n        {tableHead !== undefined ? (\r\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\r\n            <TableRow className={classes.tableHeadRow}>\r\n              {tableHead?.map((prop, key) => {\r\n                return (\r\n                  <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={key}\r\n                  >\r\n                    {prop}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n              <TableCell\r\n                className={classes.tableCell + \" \" + classes.tableHeadCell}>\r\n                {'option'}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n        ) : null}\r\n        <TableBody>\r\n          {data?.map((prop, key) => {\r\n            return (\r\n              <TableRow key={key} className={classes.tableBodyRow} style={{}}>\r\n                {Object.values(prop)?.map((prop, key) => {\r\n                  return (\r\n                    <TableCell className={classes.tableCell} key={key} >\r\n                      {prop?.toString()}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n                <div>\r\n                 \r\n                  <TableCell style={{color:'red'}}\r\n                    onClick={() => handleClickOpen(prop)}>\r\n                    {prop.disabled ?  'enable' : 'disable'}\r\n                  </TableCell>\r\n                </div>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\nCustomTable.defaultProps = {\r\n  tableHeaderColor: \"gray\"\r\n};\r\nCustomTable.propTypes = {\r\n  tableHeaderColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  tableHead: PropTypes.arrayOf(PropTypes.string),\r\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\r\n};\r\n","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\controllers\\PushData.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\AddAdminForm\\index.jsx",["168","169","170"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Select,\r\n    Button,\r\n    notification\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nconst ProfileForm = (props) => {\r\n    const {handleOk} = props;\r\n    const [form] = Form.useForm();\r\n    const [reload, setReload] = useState(false);\r\n    const onFinish = (values) => {\r\n        handleOk(values);\r\n      \r\n    };\r\n \r\n    const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"86\">+86</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n    \r\n    return (\r\n        <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                rules={[\r\n                    {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"username\"\r\n                label={\r\n                    <span>\r\n                        UserName&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n                            <QuestionCircleOutlined />\r\n                        </Tooltip>\r\n                    </span>\r\n                }\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your nickname!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your phone number!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    addonBefore={prefixSelector}\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Add admin\r\n        </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default ProfileForm",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":19,"column":10,"nodeType":"177","messageId":"178","endLine":19,"endColumn":24},{"ruleId":"175","severity":1,"message":"179","line":20,"column":10,"nodeType":"177","messageId":"178","endLine":20,"endColumn":16},{"ruleId":"175","severity":1,"message":"180","line":20,"column":18,"nodeType":"177","messageId":"178","endLine":20,"endColumn":27},{"ruleId":"175","severity":1,"message":"181","line":21,"column":8,"nodeType":"177","messageId":"178","endLine":21,"endColumn":13},{"ruleId":"175","severity":1,"message":"182","line":32,"column":24,"nodeType":"177","messageId":"178","endLine":32,"endColumn":31},{"ruleId":"175","severity":1,"message":"183","line":37,"column":10,"nodeType":"177","messageId":"178","endLine":37,"endColumn":14},{"ruleId":"175","severity":1,"message":"184","line":37,"column":16,"nodeType":"177","messageId":"178","endLine":37,"endColumn":23},{"ruleId":"175","severity":1,"message":"185","line":47,"column":10,"nodeType":"177","messageId":"178","endLine":47,"endColumn":14},{"ruleId":"175","severity":1,"message":"186","line":47,"column":16,"nodeType":"177","messageId":"178","endLine":47,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":173,"column":30,"nodeType":"189","endLine":173,"endColumn":50},{"ruleId":"175","severity":1,"message":"190","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":17},{"ruleId":"175","severity":1,"message":"191","line":11,"column":10,"nodeType":"177","messageId":"178","endLine":11,"endColumn":13},{"ruleId":"175","severity":1,"message":"192","line":11,"column":15,"nodeType":"177","messageId":"178","endLine":11,"endColumn":20},{"ruleId":"175","severity":1,"message":"193","line":11,"column":22,"nodeType":"177","messageId":"178","endLine":11,"endColumn":28},{"ruleId":"175","severity":1,"message":"194","line":11,"column":30,"nodeType":"177","messageId":"178","endLine":11,"endColumn":35},{"ruleId":"175","severity":1,"message":"195","line":50,"column":12,"nodeType":"177","messageId":"178","endLine":50,"endColumn":26},{"ruleId":"175","severity":1,"message":"196","line":50,"column":28,"nodeType":"177","messageId":"178","endLine":50,"endColumn":45},{"ruleId":"175","severity":1,"message":"191","line":11,"column":17,"nodeType":"177","messageId":"178","endLine":11,"endColumn":20},{"ruleId":"175","severity":1,"message":"192","line":11,"column":22,"nodeType":"177","messageId":"178","endLine":11,"endColumn":27},{"ruleId":"175","severity":1,"message":"197","line":15,"column":3,"nodeType":"177","messageId":"178","endLine":15,"endColumn":16},{"ruleId":"175","severity":1,"message":"198","line":15,"column":18,"nodeType":"177","messageId":"178","endLine":15,"endColumn":31},{"ruleId":"199","severity":1,"message":"200","line":204,"column":5,"nodeType":"201","messageId":"202","endLine":287,"endColumn":6},{"ruleId":"175","severity":1,"message":"191","line":9,"column":17,"nodeType":"177","messageId":"178","endLine":9,"endColumn":20},{"ruleId":"175","severity":1,"message":"192","line":9,"column":22,"nodeType":"177","messageId":"178","endLine":9,"endColumn":27},{"ruleId":"175","severity":1,"message":"203","line":57,"column":22,"nodeType":"177","messageId":"178","endLine":57,"endColumn":35},{"ruleId":"175","severity":1,"message":"204","line":168,"column":9,"nodeType":"177","messageId":"178","endLine":168,"endColumn":18},{"ruleId":"175","severity":1,"message":"205","line":1,"column":27,"nodeType":"177","messageId":"178","endLine":1,"endColumn":36},{"ruleId":"175","severity":1,"message":"206","line":53,"column":9,"nodeType":"177","messageId":"178","endLine":53,"endColumn":19},{"ruleId":"207","severity":1,"message":"208","line":146,"column":15,"nodeType":"209","messageId":"210","endLine":146,"endColumn":38},{"ruleId":"207","severity":1,"message":"208","line":148,"column":14,"nodeType":"209","messageId":"210","endLine":148,"endColumn":46},{"ruleId":"207","severity":1,"message":"208","line":149,"column":15,"nodeType":"209","messageId":"210","endLine":149,"endColumn":48},{"ruleId":"207","severity":1,"message":"208","line":152,"column":14,"nodeType":"209","messageId":"210","endLine":152,"endColumn":58},{"ruleId":"175","severity":1,"message":"211","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"212","line":7,"column":3,"nodeType":"177","messageId":"178","endLine":7,"endColumn":11},{"ruleId":"175","severity":1,"message":"213","line":9,"column":3,"nodeType":"177","messageId":"178","endLine":9,"endColumn":6},{"ruleId":"175","severity":1,"message":"214","line":10,"column":3,"nodeType":"177","messageId":"178","endLine":10,"endColumn":6},{"ruleId":"175","severity":1,"message":"215","line":11,"column":3,"nodeType":"177","messageId":"178","endLine":11,"endColumn":11},{"ruleId":"175","severity":1,"message":"216","line":13,"column":3,"nodeType":"177","messageId":"178","endLine":13,"endColumn":15},{"ruleId":"175","severity":1,"message":"217","line":19,"column":10,"nodeType":"177","messageId":"178","endLine":19,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":98,"column":13,"nodeType":"220","endLine":100,"endColumn":14},{"ruleId":"175","severity":1,"message":"221","line":9,"column":5,"nodeType":"177","messageId":"178","endLine":9,"endColumn":17},{"ruleId":"175","severity":1,"message":"222","line":47,"column":12,"nodeType":"177","messageId":"178","endLine":47,"endColumn":18},{"ruleId":"175","severity":1,"message":"223","line":47,"column":20,"nodeType":"177","messageId":"178","endLine":47,"endColumn":29},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'isAuth' is defined but never used.","'getCookie' is defined but never used.","'axios' is defined but never used.","'Content' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'TableBody' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'isModalVisible' is assigned a value but never used.","'setIsModalVisible' is assigned a value but never used.","'SmileOutlined' is defined but never used.","'FrownOutlined' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setLoadingAdd' is assigned a value but never used.","'editAdmin' is assigned a value but never used.","'useEffect' is defined but never used.","'packageBuy' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'useState' is defined but never used.","'Cascader' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Checkbox' is defined but never used.","'AutoComplete' is defined but never used.","'element' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'notification' is defined but never used.","'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]