[{"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\index.js":"1","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Home.jsx":"2","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx":"3","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\app.route.jsx":"4","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\Login.jsx":"5","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\Activate.jsx":"6","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx":"7","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\controllers\\localStorage.js":"8","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\UploadData.jsx":"9","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\ListUser.jsx":"10","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx":"11","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx":"12","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx":"13","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx":"14","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx":"15","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx":"16","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx":"17","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx":"18","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx":"19","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx":"20","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\controllers\\PushData.js":"21","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"22","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"23","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js":"24","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js":"25","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js":"26"},{"size":1336,"mtime":1609340848037,"results":"27","hashOfConfig":"28"},{"size":6099,"mtime":1609340848057,"results":"29","hashOfConfig":"28"},{"size":3905,"mtime":1609340848058,"results":"30","hashOfConfig":"28"},{"size":522,"mtime":1609340848033,"results":"31","hashOfConfig":"28"},{"size":7645,"mtime":1609412755093,"results":"32","hashOfConfig":"28"},{"size":3769,"mtime":1609340848058,"results":"33","hashOfConfig":"28"},{"size":3022,"mtime":1609340848058,"results":"34","hashOfConfig":"28"},{"size":2002,"mtime":1609340848037,"results":"35","hashOfConfig":"28"},{"size":9116,"mtime":1609340848056,"results":"36","hashOfConfig":"28"},{"size":3702,"mtime":1609340848054,"results":"37","hashOfConfig":"28"},{"size":5956,"mtime":1609340848055,"results":"38","hashOfConfig":"28"},{"size":7400,"mtime":1609347527245,"results":"39","hashOfConfig":"28"},{"size":1305,"mtime":1609340848052,"results":"40","hashOfConfig":"28"},{"size":1088,"mtime":1609340848039,"results":"41","hashOfConfig":"28"},{"size":1054,"mtime":1609340848040,"results":"42","hashOfConfig":"28"},{"size":543,"mtime":1609340848057,"results":"43","hashOfConfig":"28"},{"size":1115,"mtime":1609340848055,"results":"44","hashOfConfig":"28"},{"size":5572,"mtime":1609340848056,"results":"45","hashOfConfig":"28"},{"size":680,"mtime":1609340848053,"results":"46","hashOfConfig":"28"},{"size":644,"mtime":1609340848053,"results":"47","hashOfConfig":"28"},{"size":555,"mtime":1609340848037,"results":"48","hashOfConfig":"28"},{"size":3079,"mtime":1609340848128,"results":"49","hashOfConfig":"28"},{"size":315,"mtime":1609340848128,"results":"50","hashOfConfig":"28"},{"size":834,"mtime":1609340848129,"results":"51","hashOfConfig":"28"},{"size":7303,"mtime":1609340848126,"results":"52","hashOfConfig":"28"},{"size":1497,"mtime":1609340848132,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"8mbce",{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\index.js",[],["113","114"],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Home.jsx",["115","116","117","118","119","120"],"import React, { useEffect, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { Layout, Menu, Badge, Avatar, Popover } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  TeamOutlined,\r\n  UsergroupAddOutlined,\r\n  UploadOutlined,\r\n  BellOutlined,\r\n  NotificationOutlined \r\n} from '@ant-design/icons';\r\n// auth\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { isAuth, getCookie, signout } from '../controllers/localStorage';\r\nimport axios from 'axios';\r\n// view updata\r\nimport UpData from './Components/UploadData';\r\n// view list user\r\nimport ListUser from './Components/ListUser';\r\n// view list user admin\r\nimport ListUserAdmin from './Components/ListUserAdmin';\r\n// import components notfication\r\nimport Noti from './Components/Noti';\r\nimport Notification from './Components/SendNoti';\r\n\r\nconst { Header, Sider, Content } = Layout; // views\r\nlet heightScreen = window.innerHeight;\r\nconst Home = ({ history }) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [index, setIndex] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [dataNoti, setDataNoti] = useState([]);\r\n  const [amountNoti, setAmountNoti] = useState(0);\r\n  const [load, setLoad] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [visibleNoti, setVisibleNoti] = useState(false);\r\n  const toggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  // logout\r\n  const Logout = () => {\r\n    signout(() => {\r\n      history.push('/Login')\r\n    });\r\n  }\r\n  // set change logout\r\n  const handleVisibleChange = visible => {\r\n    setVisible(visible);\r\n  };\r\n  // set click notifi\r\n  const handleVisibleChangeNoti = visible => {\r\n    setVisibleNoti(visible);\r\n    setAmountNoti(0);\r\n  };\r\n  // push datanoti\r\n  const pushDataNoti = (data) => {\r\n    return new Promise((resolve, reject) => {\r\n      dataNoti.forEach(element => {\r\n        data.push(element);\r\n      });\r\n      resolve(data);\r\n    });\r\n  }\r\n  // set data notifi\r\n  const setDataNotification = (data) => {\r\n    setAmountNoti(data.length);\r\n    pushDataNoti(data).then(res => {\r\n      setDataNoti(res);\r\n    });\r\n  }\r\n  // set view noti\r\n  const viewNoti = () => {\r\n    return (\r\n      <div style={{overflowY: 'scroll',height:200}} >\r\n        {\r\n            dataNoti.map((element) =>\r\n            <Noti\r\n              content={element.content}\r\n              date={element.date}\r\n              status={element.status}/>\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  const getPosts = () => {\r\n    const token = getCookie('token');\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL}`, {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [load]);\r\n  return (\r\n    <div style={{ flex: 1 }}>\r\n      <Layout>\r\n        <Sider trigger={null} collapsible collapsed={collapsed}>\r\n          <div className=\"logo\" style={{ justifyContent: 'center', display: 'flex', alignItems: 'center' }}>\r\n            <h4 style={{ color: 'white' }}>TOEIC SEB</h4>\r\n          </div>\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\" icon={<TeamOutlined />} onClick={() => {\r\n              setIndex(1);\r\n            }} >\r\n              Admin\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<UsergroupAddOutlined />} onClick={() => {\r\n              setIndex(2);\r\n            }}>\r\n              User\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<UploadOutlined />} onClick={() => {\r\n              setIndex(3);\r\n            }}>\r\n              Data\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\" icon={<NotificationOutlined />} onClick={() => {\r\n              setIndex(4);\r\n            }}>\r\n              Send notification\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0, display: 'flex' }}>\r\n            {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n              className: 'trigger',\r\n              onClick: toggle,\r\n            })}\r\n            <div style={{ flex: 1, display: 'flex', justifyContent: 'flex-end', alignItems: 'center', paddingRight: 30, marginLeft: 20 }}>\r\n              <div style={{ width: 100, display: 'flex' }}>\r\n                <div style={{ width: 150, flex: 1 }}>\r\n                  <Popover\r\n                    placement=\"leftTop\"\r\n                    content={\r\n                      viewNoti      \r\n                    }\r\n                    title=\"All notification\"\r\n                    trigger=\"click\"\r\n                    visible={visibleNoti}\r\n                    onVisibleChange={handleVisibleChangeNoti}\r\n                  >\r\n                    <Badge count={amountNoti}>\r\n                      <Avatar icon={<BellOutlined />} />\r\n                    </Badge>\r\n                  </Popover>\r\n                </div>\r\n                <div style={{ width: 100, flex: 1 }}>\r\n                  <Popover\r\n                    content={<a onClick={Logout}>Logout</a>}\r\n                    title=\"Option\"\r\n                    trigger=\"click\"\r\n                    visible={visible}\r\n                    onVisibleChange={handleVisibleChange}\r\n                  >\r\n                    <Avatar icon={<UserOutlined />} />\r\n                  </Popover>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Header>\r\n          <div style={{ height: heightScreen - 100, padding: 10 }}>\r\n            {\r\n              index === 1 ? <ListUserAdmin />\r\n                : index === 2 ? <ListUser />\r\n                : index === 3? <UpData setDataNotification={(setDataNotification)}/>\r\n                :<Notification></Notification>\r\n            }\r\n          </div>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\nexport default Home\r\n","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\app.route.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\Login.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\Activate.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\controllers\\localStorage.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\UploadData.jsx",["121","122","123","124","125"],"import React, { useState } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport XLSX from 'xlsx';\r\nimport UploadFileView from './UploadFileView/index.jsx';\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Tag, Space, Button, Modal,notification } from \"antd\";\r\nimport moment from \"moment\";\r\n// import icon\r\nimport {\r\n  SmileOutlined, FrownOutlined\r\n} from '@ant-design/icons';\r\n// api up data\r\nimport { pushFile } from '../../controllers/PushData';\r\nconst styles = {\r\n  typo: {\r\n    paddingLeft: \"25%\",\r\n    marginBottom: \"40px\",\r\n    position: \"relative\"\r\n  },\r\n  note: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    bottom: \"10px\",\r\n    color: \"#c0c1c2\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"13px\",\r\n    lineHeight: \"13px\",\r\n    left: \"0\",\r\n    marginLeft: \"20px\",\r\n    position: \"absolute\",\r\n    width: \"260px\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nlet datasetFile = [{\r\n  \"name\": \"jayanth\",\r\n  \"data\": \"scd\",\r\n  \"abc\": \"sdef\"\r\n}]\r\n\r\n// columns\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"Name\",\r\n    key: \"Name\"\r\n  },\r\n  {\r\n    title: \"IDYear\",\r\n    dataIndex: \"IDYear\",\r\n    key: \"IDYear\"\r\n  },\r\n  {\r\n    title: \"IDTest\",\r\n    dataIndex: \"IDTest\",\r\n    key: \"IDTest\"\r\n  },\r\n  {\r\n    title: \"Buy\",\r\n    dataIndex: \"Buy\",\r\n    key: \"Buy\"\r\n  }\r\n];\r\n\r\nconst data = [\r\n  {\r\n    Buy: \"0\",\r\n    IDTest: 1,\r\n    IDYear: 2020,\r\n    Name: \"đề 1\"\r\n  },\r\n  {\r\n    Buy: \"0\",\r\n    IDTest: 2,\r\n    IDYear: 2020,\r\n    Name: \"đề 2\"\r\n  },\r\n];\r\nlet content = [\r\n  {\r\n    name: 'part1',\r\n    title: 'Up load data part 1'\r\n  },\r\n  {\r\n    name: 'part2',\r\n    title: 'Up load data part 2'\r\n  },\r\n  {\r\n    name: 'part3',\r\n    title: 'Up load data part 3'\r\n  },\r\n  {\r\n    name: 'part4',\r\n    title: 'Up load data part 4'\r\n  },\r\n  {\r\n    name: 'part5',\r\n    title: 'Up load data part 5'\r\n  },\r\n  {\r\n    name: 'part6',\r\n    title: 'Up load data part 6'\r\n  },\r\n  {\r\n    name: 'part7',\r\n    title: 'Up load data part 7'\r\n  },\r\n  {\r\n    name: 'part3detail',\r\n    title: 'Up load data part 3 detail'\r\n  },\r\n  {\r\n    name: 'part4detail',\r\n    title: 'Up load data part 4 detail'\r\n  },\r\n  {\r\n    name: 'part6detail',\r\n    title: 'Up load data part 6 detail'\r\n  },\r\n  {\r\n    name: 'part7detail',\r\n    title: 'Up load data part 7 detail'\r\n  },\r\n  {\r\n    name: 'test',\r\n    title: 'Up load data test'\r\n  },\r\n\r\n]\r\nexport default function UploadData(props) {\r\n  const { setDataNotification } = props;\r\n  const classes = useStyles();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  // name and data post database\r\n  const dataUpload = {\r\n    part1: [],\r\n    part2: [],\r\n    part3: [],\r\n    part4: [],\r\n    part5: [],\r\n    part6: [],\r\n    part7: [],\r\n    part3detail: [],\r\n    part4detail: [],\r\n    part6detail: [],\r\n    part7detail: [],\r\n    test: [],\r\n  }\r\n\r\n  // convert excel to json\r\n  const UploadFile = (e) => {\r\n    // console.log(e);\r\n    return new Promise((resolve, reject) => {\r\n      let selectedFile = e.target.files[0];\r\n      XLSX.utils.json_to_sheet(datasetFile, selectedFile.name);\r\n      if (selectedFile) {\r\n        let fileReader = new FileReader();\r\n        fileReader.readAsBinaryString(selectedFile);\r\n        fileReader.onload = (event) => {\r\n          let data = event.target.result;\r\n          let workbook = XLSX.read(data, { type: \"binary\" });\r\n          // console.log(workbook);\r\n          workbook.SheetNames.forEach(sheet => {\r\n            let rowObject = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheet]);\r\n            let result = JSON.stringify(rowObject, undefined, 4);\r\n            resolve(result);\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n  // set file \r\n  const uploadFile = async (e, name) => {\r\n    switch (name) {\r\n      case 'part1': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part1 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part2': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part2 = data;\r\n          })\r\n        break;\r\n      } case 'part3': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part3 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part4': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part4 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part5': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part5 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part6': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part6 = data;\r\n          })\r\n        break;\r\n      } case 'part7': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part7 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part3detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part3detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part4detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part4detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part6detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part6detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part7detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part7detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'test': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.test = data;\r\n          })\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // check data upload\r\n  const checkDataUpload = () => {\r\n    for (const property in dataUpload) {\r\n      if (property.length === 0 ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  // push data firebase\r\n  const pushData = async () => {\r\n    let res = [];\r\n    for (const property in dataUpload) {\r\n      await pushFile(dataUpload[property], property)\r\n        .then(data => {\r\n          if (data.status) {\r\n            res.push({\r\n              content: `Add data ${property} success`,\r\n              date: moment().format('YYYY/MM/DD'),\r\n              status: data.status\r\n            })\r\n          }\r\n          else {\r\n            res.push({\r\n              content: `Add data ${property} fail`,\r\n              date: moment().format('YYYY/MM/DD'),\r\n              status: data.status\r\n            })\r\n          }\r\n        })\r\n    }\r\n    // set data notification\r\n    setDataNotification(res);\r\n    setLoading(false); // set loadding\r\n    setIsModalVisible(false);\r\n   \r\n  }\r\n  const openNotification = () => {\r\n    const args = {\r\n      message: 'Thông báo!!',\r\n      description:\r\n        'Vui lòng thêm đầy đủ các phần!!!',\r\n      duration: 0,\r\n    };\r\n    notification.open(args);\r\n  };\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const handleOk = () => {\r\n    if (checkDataUpload === true) {\r\n      setLoading(true);\r\n      pushData();\r\n    }\r\n    else {\r\n      openNotification();\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    setLoading(false);\r\n    setIsModalVisible(false);\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flex: 1 }}>\r\n            <h4 className={classes.cardTitleWhite}>Up load data</h4>\r\n          </div>\r\n          <div style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button type=\"primary\" shape=\"circle\" onClick={showModal} >\r\n              +\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Modal\r\n          visible={isModalVisible}\r\n          title=\"Add data\"\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n              Up load\r\n            </Button>,\r\n          ]}\r\n        >\r\n          {\r\n            content.map((element) =>\r\n              <UploadFileView\r\n                uploadFile={uploadFile}\r\n                name={element.name}\r\n                title={element.title} />\r\n            )\r\n          }\r\n        </Modal>\r\n        <Table columns={columns} dataSource={data} />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\ListUser.jsx",["126","127","128","129","130","131","132"],"import React, { useEffect,useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridItem from \"./Grid/GridItem.jsx\";\r\nimport GridContainer from \"./Grid/GridContainer.jsx\";\r\nimport Table from \"./Table/Table.jsx\";\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n// antd library\r\nimport { Tag, Space, Button, Modal,Empty } from \"antd\";\r\n\r\nconst styles = {\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ListUser() {\r\n    const classes = useStyles();\r\n    const [reload, setReload] = React.useState(true)\r\n    const [data, setData] = React.useState([]);\r\n    // input add user admin\r\n    const [isModalVisible, setIsModalVisible] = useState(false); // set is model\r\n    // reload\r\n    const reaLoad = () => {\r\n        getData();\r\n        setReload(!reload);\r\n    }\r\n    // get list user\r\n    const getData = async () => {\r\n        return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let array = data.map(element => {\r\n                    return {\r\n                        id: element.uid,\r\n                        name: element.displayName,\r\n                        email: element.email,\r\n                        disabled: element.disabled,\r\n                        expirationDate: element.expirationDate,\r\n                        package: element.package,\r\n                    }\r\n                })\r\n                setData(array);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    return (\r\n        <GridContainer>0\r\n            <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                    <CardHeader color=\"primary\">\r\n                        <div style={{ display: \"flex\", }}>\r\n                            <div style={{ flex: 1 }} >\r\n                                <h4 className={classes.cardTitleWhite}>List user</h4>\r\n                                <p className={classes.cardCategoryWhite}>\r\n                                    User management\r\n                            </p>\r\n                            </div>\r\n                            <div style={{ flex: 1 }}>\r\n                            </div>                       \r\n                        </div>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {data.length>0? <Table\r\n                            tableHeaderColor=\"primary\"\r\n                            tableHead={['id', 'name', 'email', 'disabled', 'expiration', 'package']}\r\n                            tableData={data}\r\n                            reaLoad={reaLoad}\r\n                        />:<Empty />}\r\n                    </CardBody>\r\n                </Card>\r\n            </GridItem>\r\n        </GridContainer>\r\n    );\r\n}\r\n","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx",["133","134","135","136","137","138"],"import React, { useState, useEffect } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Tag, Space, Button, Modal } from \"antd\";\r\n\r\nconst styles = {\r\n  typo: {\r\n    paddingLeft: \"25%\",\r\n    marginBottom: \"40px\",\r\n    position: \"relative\"\r\n  },\r\n  note: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    bottom: \"10px\",\r\n    color: \"#c0c1c2\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"13px\",\r\n    lineHeight: \"13px\",\r\n    left: \"0\",\r\n    marginLeft: \"20px\",\r\n    position: \"absolute\",\r\n    width: \"260px\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst columns = [\r\n  {\r\n    title: \"ID\",\r\n    dataIndex: \"id\",\r\n    key: \"id\"\r\n  },\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"name\",\r\n    key: \"name\"\r\n  },\r\n  {\r\n    title: \"Email\",\r\n    dataIndex: \"email\",\r\n    key: \"email\"\r\n  },\r\n  {\r\n    title: \"Role\",\r\n    dataIndex: \"role\",\r\n    key: \"role\"\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    dataIndex: \"status\",\r\n    key: \"status\"\r\n  }\r\n];\r\n\r\nexport default function UploadData() {\r\n  const classes = useStyles();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [reload, setReload] = React.useState(true) // reload\r\n  const [data, setData] = React.useState([]); // data\r\n  // input add user admin\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password1: '',\r\n    password2: '',\r\n    textChange: 'Sign Up',\r\n  });\r\n\r\n  const { name, email, password1, password2, textChange } = formData;\r\n\r\n  const handleChange = (text) => (e) => {\r\n    setFormData({ ...formData, [text]: e.target.value });\r\n  };\r\n  const getData = async () => {\r\n    return await fetch(`https://toeic-seb.herokuapp.com/admin/`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let array = data.map(element => {\r\n          return {\r\n            id: element._id,\r\n            name: element.name,\r\n            email: element.email,\r\n            status: element['status']?.toString(),\r\n            role: element.role,\r\n          }\r\n        })\r\n        setData(array);\r\n      });\r\n  }\r\n  const signUp = async()=>{\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://toeic-seb.herokuapp.com/admin/register`, {\r\n          method: 'POST',\r\n          headers: {\r\n              Accept: 'application/json, text/plain, */*',\r\n              'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': \"*\",\r\n              mode: 'no-cors'\r\n          },\r\n          body:JSON.stringify({\r\n            username: name,\r\n            email: email,\r\n            password: password1\r\n          }),\r\n      }).then((data) => {\r\n          resolve(data.json);\r\n      })\r\n  });\r\n  }\r\n  useEffect(() => {\r\n    getData();\r\n  }, [])\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const handleOk = () => {\r\n    if(password2 ===password2){\r\n      signUp();\r\n      setIsModalVisible(false);\r\n    }\r\n    else{\r\n      \r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flex: 1 }}>\r\n            <h4 className={classes.cardTitleWhite}>List admin</h4>\r\n          </div>\r\n          <div style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button onClick={\r\n              showModal\r\n            }>Add admin</Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Modal title=\"Add data\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n          <div className=\"mx-auto max-w-xs relative \">\r\n            <input\r\n              className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              onChange={handleChange('name')}\r\n              value={name}\r\n            />\r\n            <input\r\n              className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              onChange={handleChange('email')}\r\n              value={email}\r\n            />\r\n            <input\r\n              className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={handleChange('password1')}\r\n              value={password1}\r\n            />\r\n            <input\r\n              className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              onChange={handleChange('password2')}\r\n              value={password2}\r\n            />\r\n          </div>\r\n        </Modal>\r\n        <Table columns={columns} dataSource={data} />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx",["139","140","141","142","143","144","145"],"import React, { useState, useEffect } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Combobox } from 'react-widgets'\r\n\r\nimport { Table, Tag, Space, Button, Modal } from \"antd\";\r\nconst styles = {\r\n  typo: {\r\n    paddingLeft: \"25%\",\r\n    marginBottom: \"40px\",\r\n    position: \"relative\"\r\n  },\r\n  note: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    bottom: \"10px\",\r\n    color: \"#c0c1c2\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"13px\",\r\n    lineHeight: \"13px\",\r\n    left: \"0\",\r\n    marginLeft: \"20px\",\r\n    position: \"absolute\",\r\n    width: \"260px\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function Notification() {\r\n  const classes = useStyles();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password1: '',\r\n    password2: '',\r\n    textChange: 'Sign Up',\r\n  });\r\n  const { name, email, password1, password2, textChange } = formData;\r\n  const packageBuy = ['orange', 'red', 'blue', 'purple'];\r\n\r\n  const handleChange = (text) => (e) => {\r\n    setFormData({ ...formData, [text]: e.target.value });\r\n  };\r\n  const handleOk = () => {\r\n\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flex: 1 }}>\r\n            <h4 className={classes.cardTitleWhite}>Send Notification</h4>\r\n          </div>\r\n          <div style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end', display: 'flex' }}>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>BASIC 1</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button>Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: 'black', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>BASIC 2</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button>Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: 'black', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>STANDART</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button>Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: 'black', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>PREMIUM</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button>Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: 'black', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Tùy chỉnh</text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button style={{ backgroundColor: '#ab47bc', color: 'white' }} onClick={\r\n              showModal\r\n            }>Cutom</Button>\r\n          </div>\r\n        </div>\r\n        <Modal title=\"Add data\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n          <div className=\"mx-auto max-w-xs relative \">\r\n            <input\r\n              className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              onChange={handleChange('name')}\r\n              value={name}\r\n            />\r\n            <input\r\n              className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              onChange={handleChange('email')}\r\n              value={email}\r\n            />\r\n            <input\r\n              className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={handleChange('password1')}\r\n              value={password1}\r\n            />\r\n            <input\r\n              className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              onChange={handleChange('password2')}\r\n              value={password2}\r\n            />\r\n          </div>\r\n        </Modal>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx",["146","147"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// core components\r\nimport styles from \"../../assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n// dialog\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { element } from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function CustomTable(props) {\r\n  const classes = useStyles();\r\n  const { tableHead, tableData, tableHeaderColor,reaLoad } = props;\r\n  const [data, setData] = React.useState([]);;\r\n  const [open, setOpen] = React.useState(false);  // open dialog\r\n  const [id, setID] = React.useState('');  // id user\r\n  const [value, setValue] = React.useState(''); //item vua chon\r\n  const handleClickOpen = (item) => { // set id user, open dialog\r\n    setValue(item);\r\n    setID(item[0]);\r\n    setOpen(true);\r\n  };\r\n  const deleteUser = async () => {\r\n    return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/disable/${value.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n    }).then(() => {\r\n      reaLoad();\r\n    });\r\n  }\r\n  const enableUser = async () => {\r\n    return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/enable/${value.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n    }).then(() => {\r\n      reaLoad();\r\n    });\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleAgree = () => {\r\n    //console.log(value.id);\r\n    if(value.disabled){\r\n      enableUser();\r\n    }else deleteUser();\r\n    setOpen(false);\r\n  }\r\n  useEffect(() => {\r\n    setData(tableData);\r\n    return () => {\r\n    }\r\n  }, [tableData])\r\n  return (\r\n    <div className={classes.tableResponsive}>\r\n      \r\n      <Dialog // dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{value.status === \"true\" ? \"Bạn có chắc chắc disable user không\" : \"Bạn có chắc chắn enable user không?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {id}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\"\r\n            onClick={() =>\r\n              handleClose()\r\n            }>\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus\r\n            onClick={() =>\r\n              handleAgree()\r\n            }>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Table className={classes.table}>\r\n        {tableHead !== undefined ? (\r\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\r\n            <TableRow className={classes.tableHeadRow}>\r\n              {tableHead?.map((prop, key) => {\r\n                return (\r\n                  <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={key}\r\n                  >\r\n                    {prop}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n              <TableCell\r\n                className={classes.tableCell + \" \" + classes.tableHeadCell}>\r\n                {'option'}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n        ) : null}\r\n        <TableBody>\r\n          {data?.map((prop, key) => {\r\n            return (\r\n              <TableRow key={key} className={classes.tableBodyRow} style={{}}>\r\n                {Object.values(prop)?.map((prop, key) => {\r\n                  return (\r\n                    <TableCell className={classes.tableCell} key={key} >\r\n                      {prop?.toString()}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n                <div>\r\n                 \r\n                  <TableCell style={{color:'red'}}\r\n                    onClick={() => handleClickOpen(prop)}>\r\n                    {prop.disabled ?  'enable' : 'disable'}\r\n                  </TableCell>\r\n                </div>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\nCustomTable.defaultProps = {\r\n  tableHeaderColor: \"gray\"\r\n};\r\nCustomTable.propTypes = {\r\n  tableHeaderColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  tableHead: PropTypes.arrayOf(PropTypes.string),\r\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\r\n};\r\n","E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\controllers\\PushData.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js",[],"E:\\nam4\\tieuluan\\adminWeb\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":16,"column":10,"nodeType":"154","messageId":"155","endLine":16,"endColumn":24},{"ruleId":"152","severity":1,"message":"156","line":17,"column":10,"nodeType":"154","messageId":"155","endLine":17,"endColumn":16},{"ruleId":"152","severity":1,"message":"157","line":29,"column":24,"nodeType":"154","messageId":"155","endLine":29,"endColumn":31},{"ruleId":"152","severity":1,"message":"158","line":34,"column":10,"nodeType":"154","messageId":"155","endLine":34,"endColumn":14},{"ruleId":"152","severity":1,"message":"159","line":37,"column":16,"nodeType":"154","messageId":"155","endLine":37,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":163,"column":30,"nodeType":"162","endLine":163,"endColumn":50},{"ruleId":"152","severity":1,"message":"163","line":11,"column":17,"nodeType":"154","messageId":"155","endLine":11,"endColumn":20},{"ruleId":"152","severity":1,"message":"164","line":11,"column":22,"nodeType":"154","messageId":"155","endLine":11,"endColumn":27},{"ruleId":"152","severity":1,"message":"165","line":15,"column":3,"nodeType":"154","messageId":"155","endLine":15,"endColumn":16},{"ruleId":"152","severity":1,"message":"166","line":15,"column":18,"nodeType":"154","messageId":"155","endLine":15,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":197,"column":5,"nodeType":"169","messageId":"170","endLine":280,"endColumn":6},{"ruleId":"152","severity":1,"message":"171","line":9,"column":8,"nodeType":"154","messageId":"155","endLine":9,"endColumn":17},{"ruleId":"152","severity":1,"message":"163","line":11,"column":10,"nodeType":"154","messageId":"155","endLine":11,"endColumn":13},{"ruleId":"152","severity":1,"message":"164","line":11,"column":15,"nodeType":"154","messageId":"155","endLine":11,"endColumn":20},{"ruleId":"152","severity":1,"message":"172","line":11,"column":22,"nodeType":"154","messageId":"155","endLine":11,"endColumn":28},{"ruleId":"152","severity":1,"message":"173","line":11,"column":30,"nodeType":"154","messageId":"155","endLine":11,"endColumn":35},{"ruleId":"152","severity":1,"message":"174","line":50,"column":12,"nodeType":"154","messageId":"155","endLine":50,"endColumn":26},{"ruleId":"152","severity":1,"message":"175","line":50,"column":28,"nodeType":"154","messageId":"155","endLine":50,"endColumn":45},{"ruleId":"152","severity":1,"message":"163","line":9,"column":17,"nodeType":"154","messageId":"155","endLine":9,"endColumn":20},{"ruleId":"152","severity":1,"message":"164","line":9,"column":22,"nodeType":"154","messageId":"155","endLine":9,"endColumn":27},{"ruleId":"152","severity":1,"message":"176","line":80,"column":10,"nodeType":"154","messageId":"155","endLine":80,"endColumn":16},{"ruleId":"152","severity":1,"message":"177","line":80,"column":18,"nodeType":"154","messageId":"155","endLine":80,"endColumn":27},{"ruleId":"152","severity":1,"message":"178","line":91,"column":46,"nodeType":"154","messageId":"155","endLine":91,"endColumn":56},{"ruleId":"179","severity":1,"message":"180","line":139,"column":8,"nodeType":"181","messageId":"182","endLine":139,"endColumn":30},{"ruleId":"152","severity":1,"message":"183","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"184","line":9,"column":10,"nodeType":"154","messageId":"155","endLine":9,"endColumn":18},{"ruleId":"152","severity":1,"message":"185","line":11,"column":10,"nodeType":"154","messageId":"155","endLine":11,"endColumn":15},{"ruleId":"152","severity":1,"message":"163","line":11,"column":17,"nodeType":"154","messageId":"155","endLine":11,"endColumn":20},{"ruleId":"152","severity":1,"message":"164","line":11,"column":22,"nodeType":"154","messageId":"155","endLine":11,"endColumn":27},{"ruleId":"152","severity":1,"message":"178","line":60,"column":46,"nodeType":"154","messageId":"155","endLine":60,"endColumn":56},{"ruleId":"152","severity":1,"message":"186","line":61,"column":9,"nodeType":"154","messageId":"155","endLine":61,"endColumn":19},{"ruleId":"152","severity":1,"message":"187","line":19,"column":10,"nodeType":"154","messageId":"155","endLine":19,"endColumn":17},{"ruleId":"188","severity":1,"message":"189","line":98,"column":13,"nodeType":"190","endLine":100,"endColumn":14},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'isAuth' is defined but never used.","'Content' is assigned a value but never used.","'data' is assigned a value but never used.","'setLoad' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Tag' is defined but never used.","'Space' is defined but never used.","'SmileOutlined' is defined but never used.","'FrownOutlined' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'TableBody' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'isModalVisible' is assigned a value but never used.","'setIsModalVisible' is assigned a value but never used.","'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","'textChange' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'useEffect' is defined but never used.","'Combobox' is defined but never used.","'Table' is defined but never used.","'packageBuy' is assigned a value but never used.","'element' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]