[{"D:\\TLCN\\web_admin\\web\\src\\index.js":"1","D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx":"2","D:\\TLCN\\web_admin\\web\\src\\views\\Home.jsx":"3","D:\\TLCN\\web_admin\\web\\src\\app.route.jsx":"4","D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\Login.jsx":"5","D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\Activate.jsx":"6","D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx":"7","D:\\TLCN\\web_admin\\web\\src\\controllers\\localStorage.js":"8","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ListUser.jsx":"9","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Profile.jsx":"10","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\UploadData.jsx":"11","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx":"12","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx":"13","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx":"14","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx":"15","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx":"16","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx":"17","D:\\TLCN\\web_admin\\web\\src\\controllers\\PushData.js":"18","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"19","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"20","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ProfileForm\\index.jsx":"21","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\AddAdminForm\\index.jsx":"22","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js":"23","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx":"24","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx":"25","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx":"26","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx":"27","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js":"28","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js":"29"},{"size":1298,"mtime":1609227759841,"results":"30","hashOfConfig":"31"},{"size":3905,"mtime":1609227575708,"results":"32","hashOfConfig":"31"},{"size":6234,"mtime":1610018350710,"results":"33","hashOfConfig":"31"},{"size":522,"mtime":1608991286634,"results":"34","hashOfConfig":"31"},{"size":8493,"mtime":1609581282825,"results":"35","hashOfConfig":"31"},{"size":3769,"mtime":1609227580093,"results":"36","hashOfConfig":"31"},{"size":3022,"mtime":1609227577744,"results":"37","hashOfConfig":"31"},{"size":2130,"mtime":1609580804178,"results":"38","hashOfConfig":"31"},{"size":3701,"mtime":1609397830484,"results":"39","hashOfConfig":"31"},{"size":2449,"mtime":1609584135403,"results":"40","hashOfConfig":"31"},{"size":15332,"mtime":1610031190613,"results":"41","hashOfConfig":"31"},{"size":10191,"mtime":1609645172897,"results":"42","hashOfConfig":"31"},{"size":7119,"mtime":1610018032165,"results":"43","hashOfConfig":"31"},{"size":1054,"mtime":1609227554977,"results":"44","hashOfConfig":"31"},{"size":1115,"mtime":1609330413878,"results":"45","hashOfConfig":"31"},{"size":543,"mtime":1609227749079,"results":"46","hashOfConfig":"31"},{"size":1305,"mtime":1609227545241,"results":"47","hashOfConfig":"31"},{"size":1828,"mtime":1610031012485,"results":"48","hashOfConfig":"31"},{"size":315,"mtime":1608998157762,"results":"49","hashOfConfig":"31"},{"size":3079,"mtime":1608998346936,"results":"50","hashOfConfig":"31"},{"size":5231,"mtime":1609645285608,"results":"51","hashOfConfig":"31"},{"size":4691,"mtime":1609407418982,"results":"52","hashOfConfig":"31"},{"size":7303,"mtime":1608998157799,"results":"53","hashOfConfig":"31"},{"size":1088,"mtime":1609227640023,"results":"54","hashOfConfig":"31"},{"size":680,"mtime":1609227539301,"results":"55","hashOfConfig":"31"},{"size":644,"mtime":1609227533683,"results":"56","hashOfConfig":"31"},{"size":5572,"mtime":1609227909933,"results":"57","hashOfConfig":"31"},{"size":834,"mtime":1608998381462,"results":"58","hashOfConfig":"31"},{"size":1497,"mtime":1608999404443,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"jtj6bx",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"D:\\TLCN\\web_admin\\web\\src\\index.js",[],["125","126"],"D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Home.jsx",["127","128","129","130","131","132","133","134"],"D:\\TLCN\\web_admin\\web\\src\\app.route.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\Login.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\Activate.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\controllers\\localStorage.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ListUser.jsx",["135","136","137","138","139","140","141"],"import React, { useEffect,useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridItem from \"./Grid/GridItem.jsx\";\r\nimport GridContainer from \"./Grid/GridContainer.jsx\";\r\nimport Table from \"./Table/Table.jsx\";\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n// antd library\r\nimport { Tag, Space, Button, Modal,Empty } from \"antd\";\r\n\r\nconst styles = {\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ListUser() {\r\n    const classes = useStyles();\r\n    const [reload, setReload] = React.useState(true)\r\n    const [data, setData] = React.useState([]);\r\n    // input add user admin\r\n    const [isModalVisible, setIsModalVisible] = useState(false); // set is model\r\n    // reload\r\n    const reaLoad = () => {\r\n        getData();\r\n        setReload(!reload);\r\n    }\r\n    // get list user\r\n    const getData = async () => {\r\n        return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let array = data.map(element => {\r\n                    return {\r\n                        id: element.uid,\r\n                        name: element.displayName,\r\n                        email: element.email,\r\n                        disabled: element.disabled,\r\n                        expirationDate: element.expirationDate,\r\n                        package: element.package,\r\n                    }\r\n                })\r\n                setData(array);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    return (\r\n        <GridContainer>\r\n            <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                    <CardHeader color=\"primary\">\r\n                        <div style={{ display: \"flex\", }}>\r\n                            <div style={{ flex: 1 }} >\r\n                                <h4 className={classes.cardTitleWhite}>List user</h4>\r\n                                <p className={classes.cardCategoryWhite}>\r\n                                    User management\r\n                            </p>\r\n                            </div>\r\n                            <div style={{ flex: 1 }}>\r\n                            </div>                       \r\n                        </div>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {data.length>0? <Table\r\n                            tableHeaderColor=\"primary\"\r\n                            tableHead={['id', 'name', 'email', 'disabled', 'expiration', 'package']}\r\n                            tableData={data}\r\n                            reaLoad={reaLoad}\r\n                        />:<Empty />}\r\n                    </CardBody>\r\n                </Card>\r\n            </GridItem>\r\n        </GridContainer>\r\n    );\r\n}\r\n","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Profile.jsx",["142","143","144"],"import React, { useState,useEffect } from 'react';\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport GridItem from \"./Grid/GridItem.jsx\";\r\nimport GridContainer from \"./Grid/GridContainer.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport ProfileForm from './ProfileForm';\r\nimport {notification } from \"antd\";\r\n\r\nconst styles = {\r\n    typo: {\r\n        paddingLeft: \"25%\",\r\n        marginBottom: \"40px\",\r\n        position: \"relative\"\r\n    },\r\n    note: {\r\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n        bottom: \"10px\",\r\n        color: \"#c0c1c2\",\r\n        display: \"block\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"13px\",\r\n        lineHeight: \"13px\",\r\n        left: \"0\",\r\n        marginLeft: \"20px\",\r\n        position: \"absolute\",\r\n        width: \"260px\"\r\n    },\r\n    cardCategoryWhite: {\r\n        color: \"rgba(255,255,255,.62)\",\r\n        margin: \"0\",\r\n        fontSize: \"14px\",\r\n        marginTop: \"0\",\r\n        marginBottom: \"0\"\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\"\r\n    }\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function Profile() {\r\n    const classes = useStyles();\r\n   \r\n    return (\r\n        <GridContainer>\r\n            <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                    <CardHeader color=\"primary\">\r\n                        <div style={{ display: \"flex\", }}>\r\n                            <div style={{ flex: 1 }} >\r\n                                <h4 className={classes.cardTitleWhite}>Profile</h4>\r\n                                {/* <p className={classes.cardCategoryWhite}>\r\n                                    \r\n                                </p> */}\r\n                            </div>\r\n                            <div style={{ flex: 1 }}>\r\n                            </div>\r\n                        </div>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <ProfileForm />                \r\n                    </CardBody>\r\n                </Card>\r\n            </GridItem>\r\n        </GridContainer>\r\n    );\r\n}\r\n","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\UploadData.jsx",["145","146","147","148","149","150"],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx",["151","152","153","154","155","156"],"import React, { useState, useEffect } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Button, Modal } from \"antd\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nconst styles = {\r\n  typo: {\r\n    paddingLeft: \"25%\",\r\n    marginBottom: \"40px\",\r\n    position: \"relative\"\r\n  },\r\n  note: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    bottom: \"10px\",\r\n    color: \"#c0c1c2\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"13px\",\r\n    lineHeight: \"13px\",\r\n    left: \"0\",\r\n    marginLeft: \"20px\",\r\n    position: \"absolute\",\r\n    width: \"260px\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function Notification() {\r\n  const classes = useStyles();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const packageBuy = ['orange', 'red', 'blue', 'purple'];\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const sendMessage = (values) => {\r\n    fetch(`https://toeic-seb-firebase.herokuapp.com/sendmessage/send/package`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n      body: JSON.stringify({\r\n        title: values.Title,\r\n        text: values.Content,\r\n      }),\r\n    }).then((data) => {\r\n      console.log(data.json());\r\n      toast.success('Gửi thành công', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }).catch(() => {\r\n      toast.error('Đã xãy ra lỗi!', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    })\r\n  }\r\n  const sendVoca = () => {\r\n    fetch(`https://toeic-seb-firebase.herokuapp.com/sendmessage/send/vocarandom`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n      body: JSON.stringify({\r\n        title: 'values.Title',\r\n        text: 'values.Content',\r\n      }),\r\n    }).then(() => {\r\n      toast.success('Gửi thành công', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }).catch((err) => {\r\n      console.log('????',err + '')\r\n      toast.error('Đã xãy ra lỗi!', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    })\r\n  }\r\n  const onFinish = (values) => {\r\n    sendMessage(values);\r\n    setIsModalVisible(false);\r\n  };\r\n  const layout = {\r\n    labelCol: {\r\n      span: 3,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n  const validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n  };\r\n  return (\r\n    <Card>\r\n      <ToastContainer />\r\n      <CardHeader color=\"primary\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flex: 1 }}>\r\n            <h4 className={classes.cardTitleWhite}>Send Notification</h4>\r\n          </div>\r\n          <div style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end', display: 'flex' }}>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>BASIC 1</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button\r\n              onClick={() => {\r\n                sendMessage({ Title: \"Thông báo khuyến mãi 😍😍😍\", Content: \"Giảm giá 5% cho gói BASIC 1\" })\r\n              }}\r\n            >Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>BASIC 2</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button\r\n              onClick={() => {\r\n                sendMessage({ Title: \"Thông báo khuyến mãi 😍😍😍\", Content: \"Giảm giá 5% cho gói BASIC 2\" })\r\n              }}\r\n            >Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>STANDART</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button\r\n              onClick={() => {\r\n                sendMessage({ Title: \"Thông báo khuyến mãi 😍😍😍\", Content: \"Giảm giá 5% cho gói STANDART\" })\r\n              }}\r\n            >Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>PREMIUM</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button\r\n              onClick={() => {\r\n                sendMessage({ Title: \"Thông báo khuyến mãi 😍😍😍\", Content: \"Giảm giá 5% cho gói PREMIUM\" })\r\n              }}\r\n            >Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Tùy chỉnh</text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button style={{ backgroundColor: '#ab47bc', color: 'white' }} onClick={\r\n              showModal\r\n            }>Custom</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi ngẩu nhiên 1 từ vựng</text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button style={{ backgroundColor: '#ab47bc', color: 'white' }}\r\n              onClick={() => {\r\n                sendVoca();\r\n              }}\r\n            >Send</Button>\r\n          </div>\r\n        </div>\r\n        <Modal title=\"Custom\" visible={isModalVisible} footer={null} onCancel={handleCancel}>\r\n          <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n            <Form.Item\r\n              name={'Title'}\r\n              label=\"Title\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name={'Content'} label=\"Content\">\r\n              <Input.TextArea />\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 3 }}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n        </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx",["157","158","159"],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\controllers\\PushData.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\ProfileForm\\index.jsx",["160","161","162","163","164","165","166"],"import React, { useEffect, useState } from 'react';\r\nimport { getLocalStorage } from '../../../controllers/localStorage';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  notification,\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { set } from 'js-cookie';\r\n\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nconst get = async () => {\r\n  return new Promise((resolve) => {\r\n    let user = getLocalStorage('user');\r\n    resolve(JSON.parse(user));\r\n  })\r\n}\r\nconst ProfileForm = () => {\r\n  const [form] = Form.useForm();\r\n  const [dataAdmin, setDataAdmin] = useState({});\r\n  useEffect(() => {\r\n    const func = async () => {\r\n      get().then(data=>{\r\n        form.setFieldsValue({\r\n          name: data.name,\r\n          email: data.email,\r\n          phone: data.phonenumber,\r\n          username: 'admin',\r\n          prefix: \"84\",\r\n        });\r\n      })\r\n    }\r\n    func();\r\n}, []);\r\n\r\n// update profile\r\nconst updateProfile = async (values) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`https://toeic-seb.herokuapp.com/admin/update/${values.id}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n      body: JSON.stringify({\r\n        username: values.username,\r\n        email: values.email,\r\n        password: values.confirm,\r\n        phone: values.phone\r\n      }),\r\n    }).then((data) => {\r\n      resolve(data.json);\r\n    })\r\n  });\r\n}\r\nconst handleOk = (values) => {\r\n  updateProfile(values)\r\n    .then(data => {\r\n      if (data.status) {\r\n        openNotification('Update thông tin thành công.');\r\n      }\r\n      else {\r\n        openNotification('Update thông tin thất bại!!');\r\n      }\r\n    });\r\n};\r\nconst openNotification = (content) => {\r\n  const args = {\r\n    message: 'Thông báo!!',\r\n    description: content,\r\n    duration: 0,\r\n  };\r\n  notification.open(args);\r\n};\r\nconst onFinish = (values) => {\r\n  handleOk(values);\r\n};\r\nconst prefixSelector = (\r\n  <Form.Item name=\"prefix\" noStyle>\r\n    <Select\r\n      style={{\r\n        width: 70,\r\n      }}\r\n    >\r\n      <Option key=\"84\" value=\"84\">+84</Option>\r\n      <Option key=\"86\" value=\"86\">+86</Option>\r\n      <Option key=\"89\" value=\"89\">+89</Option>\r\n    </Select>\r\n  </Form.Item>\r\n);\r\nreturn (\r\n  <Form\r\n    {...formItemLayout}\r\n    form={form}\r\n    name=\"register\"\r\n    onFinish={onFinish}\r\n    //initialValues={dataAdmin}\r\n    scrollToFirstError\r\n    style={{ width: 1000 }}\r\n  >\r\n    <Form.Item\r\n      name=\"email\"\r\n      label=\"E-mail\"\r\n      rules={[\r\n        {\r\n          type: 'email',\r\n          message: 'The input is not valid E-mail!',\r\n        },\r\n        {\r\n          required: true,\r\n          message: 'Please input your E-mail!',\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n    {console.log(dataAdmin)}\r\n    <Form.Item\r\n      name=\"username\"\r\n      label={\r\n        <span>\r\n          UserName&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n            <QuestionCircleOutlined />\r\n          </Tooltip>\r\n        </span>\r\n      }\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your nickname!',\r\n          whitespace: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n    <Form.Item\r\n      name=\"password\"\r\n      label=\"Password\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your password!',\r\n        },\r\n      ]}\r\n      hasFeedback\r\n    >\r\n      <Input.Password />\r\n    </Form.Item>\r\n    <Form.Item\r\n      name=\"confirm\"\r\n      label=\"Confirm Password\"\r\n      dependencies={['password']}\r\n      hasFeedback\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please confirm your password!',\r\n        },\r\n        ({ getFieldValue }) => ({\r\n          validator(rule, value) {\r\n            if (!value || getFieldValue('password') === value) {\r\n              return Promise.resolve();\r\n            }\r\n            return Promise.reject('The two passwords that you entered do not match!');\r\n          },\r\n        }),\r\n      ]}\r\n    >\r\n      <Input.Password />\r\n    </Form.Item>\r\n    <Form.Item\r\n      name=\"phone\"\r\n      label=\"Phone Number\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your phone number!',\r\n        },\r\n      ]}\r\n    >\r\n      <Input\r\n        addonBefore={prefixSelector}\r\n        style={{\r\n          width: '100%',\r\n        }}\r\n      />\r\n    </Form.Item>\r\n    <Form.Item {...tailFormItemLayout}>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Update\r\n        </Button>\r\n    </Form.Item>\r\n  </Form>\r\n);\r\n};\r\n\r\nexport default ProfileForm","D:\\TLCN\\web_admin\\web\\src\\views\\Components\\AddAdminForm\\index.jsx",["167","168","169"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Select,\r\n    Button,\r\n    notification\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nconst ProfileForm = (props) => {\r\n    const {handleOk} = props;\r\n    const [form] = Form.useForm();\r\n    const [reload, setReload] = useState(false);\r\n    const onFinish = (values) => {\r\n        handleOk(values);\r\n      \r\n    };\r\n \r\n    const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"86\">+86</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n    \r\n    return (\r\n        <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                rules={[\r\n                    {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"username\"\r\n                label={\r\n                    <span>\r\n                        UserName&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n                            <QuestionCircleOutlined />\r\n                        </Tooltip>\r\n                    </span>\r\n                }\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your nickname!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your phone number!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    addonBefore={prefixSelector}\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Add admin\r\n        </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default ProfileForm","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx",[],"D:\\TLCN\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx",["170","171"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// core components\r\nimport styles from \"../../assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n// dialog\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { element } from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function CustomTable(props) {\r\n  const classes = useStyles();\r\n  const { tableHead, tableData, tableHeaderColor,reaLoad } = props;\r\n  const [data, setData] = React.useState([]);;\r\n  const [open, setOpen] = React.useState(false);  // open dialog\r\n  const [id, setID] = React.useState('');  // id user\r\n  const [value, setValue] = React.useState(''); //item vua chon\r\n  const handleClickOpen = (item) => { // set id user, open dialog\r\n    setValue(item);\r\n    setID(item[0]);\r\n    setOpen(true);\r\n  };\r\n  const deleteUser = async () => {\r\n    return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/disable/${value.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n    }).then(() => {\r\n      reaLoad();\r\n    });\r\n  }\r\n  const enableUser = async () => {\r\n    return await fetch(`https://toeic-seb-firebase.herokuapp.com/users/enable/${value.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n    }).then(() => {\r\n      reaLoad();\r\n    });\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleAgree = () => {\r\n    //console.log(value.id);\r\n    if(value.disabled){\r\n      enableUser();\r\n    }else deleteUser();\r\n    setOpen(false);\r\n  }\r\n  useEffect(() => {\r\n    setData(tableData);\r\n    return () => {\r\n    }\r\n  }, [tableData])\r\n  return (\r\n    <div className={classes.tableResponsive}>\r\n      \r\n      <Dialog // dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{value.status === \"true\" ? \"Bạn có chắc chắc disable user không\" : \"Bạn có chắc chắn enable user không?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {id}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\"\r\n            onClick={() =>\r\n              handleClose()\r\n            }>\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus\r\n            onClick={() =>\r\n              handleAgree()\r\n            }>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Table className={classes.table}>\r\n        {tableHead !== undefined ? (\r\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\r\n            <TableRow className={classes.tableHeadRow}>\r\n              {tableHead?.map((prop, key) => {\r\n                return (\r\n                  <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={key}\r\n                  >\r\n                    {prop}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n              <TableCell\r\n                className={classes.tableCell + \" \" + classes.tableHeadCell}>\r\n                {'option'}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n        ) : null}\r\n        <TableBody>\r\n          {data?.map((prop, key) => {\r\n            return (\r\n              <TableRow key={key} className={classes.tableBodyRow} style={{}}>\r\n                {Object.values(prop)?.map((prop, key) => {\r\n                  return (\r\n                    <TableCell className={classes.tableCell} key={key} >\r\n                      {prop?.toString()}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n                <div>\r\n                 \r\n                  <TableCell style={{color:'red'}}\r\n                    onClick={() => handleClickOpen(prop)}>\r\n                    {prop.disabled ?  'enable' : 'disable'}\r\n                  </TableCell>\r\n                </div>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\nCustomTable.defaultProps = {\r\n  tableHeaderColor: \"gray\"\r\n};\r\nCustomTable.propTypes = {\r\n  tableHeaderColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  tableHead: PropTypes.arrayOf(PropTypes.string),\r\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\r\n};\r\n","D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"D:\\TLCN\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":18,"column":10,"nodeType":"178","messageId":"179","endLine":18,"endColumn":24},{"ruleId":"176","severity":1,"message":"180","line":19,"column":18,"nodeType":"178","messageId":"179","endLine":19,"endColumn":27},{"ruleId":"176","severity":1,"message":"181","line":20,"column":8,"nodeType":"178","messageId":"179","endLine":20,"endColumn":13},{"ruleId":"176","severity":1,"message":"182","line":31,"column":24,"nodeType":"178","messageId":"179","endLine":31,"endColumn":31},{"ruleId":"176","severity":1,"message":"183","line":37,"column":10,"nodeType":"178","messageId":"179","endLine":37,"endColumn":14},{"ruleId":"176","severity":1,"message":"184","line":37,"column":16,"nodeType":"178","messageId":"179","endLine":37,"endColumn":23},{"ruleId":"185","severity":1,"message":"186","line":52,"column":5,"nodeType":"187","endLine":52,"endColumn":7,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":164,"column":30,"nodeType":"191","endLine":164,"endColumn":50},{"ruleId":"176","severity":1,"message":"192","line":9,"column":8,"nodeType":"178","messageId":"179","endLine":9,"endColumn":17},{"ruleId":"176","severity":1,"message":"193","line":11,"column":10,"nodeType":"178","messageId":"179","endLine":11,"endColumn":13},{"ruleId":"176","severity":1,"message":"194","line":11,"column":15,"nodeType":"178","messageId":"179","endLine":11,"endColumn":20},{"ruleId":"176","severity":1,"message":"195","line":11,"column":22,"nodeType":"178","messageId":"179","endLine":11,"endColumn":28},{"ruleId":"176","severity":1,"message":"196","line":11,"column":30,"nodeType":"178","messageId":"179","endLine":11,"endColumn":35},{"ruleId":"176","severity":1,"message":"197","line":50,"column":12,"nodeType":"178","messageId":"179","endLine":50,"endColumn":26},{"ruleId":"176","severity":1,"message":"198","line":50,"column":28,"nodeType":"178","messageId":"179","endLine":50,"endColumn":45},{"ruleId":"176","severity":1,"message":"199","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"200","line":1,"column":26,"nodeType":"178","messageId":"179","endLine":1,"endColumn":35},{"ruleId":"176","severity":1,"message":"201","line":11,"column":9,"nodeType":"178","messageId":"179","endLine":11,"endColumn":21},{"ruleId":"176","severity":1,"message":"193","line":11,"column":17,"nodeType":"178","messageId":"179","endLine":11,"endColumn":20},{"ruleId":"176","severity":1,"message":"194","line":11,"column":30,"nodeType":"178","messageId":"179","endLine":11,"endColumn":35},{"ruleId":"176","severity":1,"message":"202","line":15,"column":3,"nodeType":"178","messageId":"179","endLine":15,"endColumn":16},{"ruleId":"176","severity":1,"message":"203","line":15,"column":18,"nodeType":"178","messageId":"179","endLine":15,"endColumn":31},{"ruleId":"176","severity":1,"message":"204","line":19,"column":10,"nodeType":"178","messageId":"179","endLine":19,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":236,"column":5,"nodeType":"207","messageId":"208","endLine":319,"endColumn":6},{"ruleId":"176","severity":1,"message":"200","line":1,"column":27,"nodeType":"178","messageId":"179","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"209","line":53,"column":9,"nodeType":"178","messageId":"179","endLine":53,"endColumn":19},{"ruleId":"210","severity":1,"message":"211","line":146,"column":15,"nodeType":"212","messageId":"213","endLine":146,"endColumn":38},{"ruleId":"210","severity":1,"message":"211","line":148,"column":14,"nodeType":"212","messageId":"213","endLine":148,"endColumn":46},{"ruleId":"210","severity":1,"message":"211","line":149,"column":15,"nodeType":"212","messageId":"213","endLine":149,"endColumn":48},{"ruleId":"210","severity":1,"message":"211","line":152,"column":14,"nodeType":"212","messageId":"213","endLine":152,"endColumn":58},{"ruleId":"176","severity":1,"message":"193","line":9,"column":17,"nodeType":"178","messageId":"179","endLine":9,"endColumn":20},{"ruleId":"176","severity":1,"message":"194","line":9,"column":22,"nodeType":"178","messageId":"179","endLine":9,"endColumn":27},{"ruleId":"176","severity":1,"message":"214","line":57,"column":22,"nodeType":"178","messageId":"179","endLine":57,"endColumn":35},{"ruleId":"176","severity":1,"message":"215","line":8,"column":3,"nodeType":"178","messageId":"179","endLine":8,"endColumn":11},{"ruleId":"176","severity":1,"message":"216","line":10,"column":3,"nodeType":"178","messageId":"179","endLine":10,"endColumn":6},{"ruleId":"176","severity":1,"message":"217","line":11,"column":3,"nodeType":"178","messageId":"179","endLine":11,"endColumn":6},{"ruleId":"176","severity":1,"message":"218","line":12,"column":3,"nodeType":"178","messageId":"179","endLine":12,"endColumn":11},{"ruleId":"176","severity":1,"message":"219","line":17,"column":10,"nodeType":"178","messageId":"179","endLine":17,"endColumn":13},{"ruleId":"176","severity":1,"message":"220","line":58,"column":21,"nodeType":"178","messageId":"179","endLine":58,"endColumn":33},{"ruleId":"185","severity":1,"message":"221","line":72,"column":4,"nodeType":"187","endLine":72,"endColumn":6,"suggestions":"222"},{"ruleId":"176","severity":1,"message":"201","line":9,"column":5,"nodeType":"178","messageId":"179","endLine":9,"endColumn":17},{"ruleId":"176","severity":1,"message":"223","line":47,"column":12,"nodeType":"178","messageId":"179","endLine":47,"endColumn":18},{"ruleId":"176","severity":1,"message":"224","line":47,"column":20,"nodeType":"178","messageId":"179","endLine":47,"endColumn":29},{"ruleId":"176","severity":1,"message":"204","line":19,"column":10,"nodeType":"178","messageId":"179","endLine":19,"endColumn":17},{"ruleId":"225","severity":1,"message":"226","line":98,"column":13,"nodeType":"227","endLine":100,"endColumn":14},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'getCookie' is defined but never used.","'axios' is defined but never used.","'Content' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkIAuth'. Either include it or remove the dependency array.","ArrayExpression",["230"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'TableBody' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'isModalVisible' is assigned a value but never used.","'setIsModalVisible' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'notification' is defined but never used.","'SmileOutlined' is defined but never used.","'FrownOutlined' is defined but never used.","'element' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'packageBuy' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'setLoadingAdd' is assigned a value but never used.","'Cascader' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Checkbox' is defined but never used.","'set' is defined but never used.","'setDataAdmin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["231"],"'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [checkIAuth]",{"range":"236","text":"237"},"Update the dependencies array to be: [form]",{"range":"238","text":"239"},[1629,1631],"[checkIAuth]",[1363,1365],"[form]"]